{"version":3,"sources":["webpack://ReactNotifications/webpack/bootstrap","webpack://ReactNotifications/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack://ReactNotifications/./src/constants.js","webpack://ReactNotifications/./src/utils.js","webpack://ReactNotifications/./src/validators.js","webpack://ReactNotifications/./src/helpers.js","webpack://ReactNotifications/./src/react-notification.js","webpack://ReactNotifications/./src/react-notification-component.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","require","e","NOTIFICATION_BASE_CLASS","CONTAINER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TOP_LEFT","TOP_RIGHT","TOP_CENTER","INSERTION","TOP","BOTTOM","NOTIFICATION_TYPE","SUCCESS","DANGER","INFO","DEFAULT","WARNING","NOTIFICATION_STAGE","SLIDING_ANIMATION_EXIT","TOUCH_SLIDING_ANIMATION_EXIT","MANUAL_REMOVAL","REMOVAL","TIMEOUT","CLICK","TOUCH","MANUAL","ERROR","DISMISS_ICON_CLASS","DISMISS_ICON_CONTENT","DISMISS_ICON_STRING","DISMISS_ICON_INVALID","ANIMATION_IN","ANIMATION_OUT","DISMISS_REQUIRED","DISMISS_NUMBER","DISMISS_POSITIVE","TITLE_STRING","MESSAGE_REQUIRED","MESSAGE_STRING","TYPE_REQUIRED","TYPE_STRING","TYPE_NOT_EXISTENT","CONTAINER_REQUIRED","CONTAINER_STRING","DISMISSABLE_CLICK_BOOL","DISMISSABLE_TOUCH_BOOL","WIDTH_NUMBER","INSERT_STRING","TRANSITION_DURATION_NUMBER","TRANSITION_CUBICBEZIER_NUMBER","TRANSITION_DELAY_NUMBER","TYPE_NOT_FOUND","cssWidth","width","concat","isNullOrUndefined","prop","isString","isNumber","isBoolean","isArray","constructor","Array","validateTransition","transition","defaults","duration","cubicBezier","delay","transitionOptions","Error","isBottomContainer","container","isTopContainer","getHtmlClassesForType","notification","type","userDefinedTypes","content","toLowerCase","foundType","find","q","htmlClasses","getCubicBezierTransition","arguments","length","slidingExitTransition","slidingExit","handleStageTransition","state","animatedElementClasses","rootElementStyle","stateAnimatedElementClasses","stateRootStyle","currentX","startX","stage","childElementStyle","window","innerWidth","touchSwipe","swipe","touchSlidingExit","touchFade","fade","opacity","position","left","getChildStyleForTouchTransitionExit","height","marginBottom","animationOut","forEach","item","push","resized","getRootHeightStyle","scrollHeight","react_notification_ReactNotification","ReactNotification","props","_this","TypeError","this","_getPrototypeOf","endOfSmartSliding","onTransitionEnd","_assertThisInitialized","onNotificationClick","setDismissTimeout","onSmartSlidingEnd","onTouchSmartSlidingEnd","onTouchStart","onTouchMove","onTouchEnd","rootDOM","external_commonjs_react_commonjs2_react_amd_react_root_React_default","a","createRef","_ref","isFirstNotification","hasSliding","insert","overflow","animationIn","getInitialSlidingState","Component","smartSliding","setRemovalTimeout","dismiss","timeoutId","clearTimeout","_this2","setTimeout","_this2$props","toggleTimeoutRemoval","setState","current","requestAnimationFrame","stopPropagation","target","isSameNode","toggleRemoval","slidingEnter","_this3","onClickHandler","touches","pageX","_this$props","toggleTouchEnd","distance","diffX","Math","abs","touchSlidingBack","onAnimationEnd","touchHasEnded","join","dismissable","click","createElement","onTouchCancel","onClick","className","ref","style","notificationTitle","icon","htmlCloseIconContent","dismissIcon","title","message","react_notification_component_ReactNotificationComponent","ReactNotificationComponent","react_notification_component_getPrototypeOf","isMobile","breakpoint","notifications","types","addNotification","react_notification_component_assertThisInitialized","handleResize","renderReactNotifications","addEventListener","mounted","map","id","removedBy","data","options","random","toString","substr","definedTypes","option","touch","iconClassName","iconContent","isValidElement","getNotificationOptions","_toConsumableArray","API","_this4","_this5","filter","onNotificationRemoval","_this6","mobileNotifications","bottom","top","notificationsPerContainer","topLeft","topRight","topCenter","bottomLeft","bottomRight","bottomCenter","__webpack_exports__","z"],"mappings":"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","file":"react-notifications-component.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"react\");","export const NOTIFICATION_BASE_CLASS = \"notification-item\";\r\n\r\nexport const CONTAINER = {\r\n  BOTTOM_LEFT: \"bottom-left\",\r\n  BOTTOM_RIGHT: \"bottom-right\",\r\n  BOTTOM_CENTER: \"bottom-center\",\r\n  TOP_LEFT: \"top-left\",\r\n  TOP_RIGHT: \"top-right\",\r\n  TOP_CENTER: \"top-center\",\r\n};\r\n\r\nexport const INSERTION = {\r\n  TOP: \"top\",\r\n  BOTTOM: \"bottom\"\r\n};\r\n\r\nexport const NOTIFICATION_TYPE = {\r\n  SUCCESS: \"success\",\r\n  DANGER: \"danger\",\r\n  INFO: \"info\",\r\n  DEFAULT: \"default\",\r\n  WARNING: \"warning\"\r\n};\r\n\r\nexport const NOTIFICATION_STAGE = {\r\n  // used for both sliding and animation at the same time\r\n  SLIDING_ANIMATION_EXIT: \"SLIDING_ANIMATION_EXIT\",\r\n\r\n  // used for onTouchMove/onTouchEnd to slide and animate\r\n  TOUCH_SLIDING_ANIMATION_EXIT: \"TOUCH_SLIDING_ANIMATION_EXIT\",\r\n\r\n  // used by API call to remove notification\r\n  MANUAL_REMOVAL: \"REMOVAL\"\r\n};\r\n\r\nexport const REMOVAL = {\r\n  TIMEOUT: 1,\r\n  CLICK: 2,\r\n  TOUCH: 3,\r\n  MANUAL: 4\r\n};\r\n\r\nexport const ERROR = {\r\n  // dismiss icon option\r\n  DISMISS_ICON_CLASS: \"className property of dismissIcon option is required\",\r\n  DISMISS_ICON_CONTENT: \"content property of dismissIcon option is required\",\r\n  DISMISS_ICON_STRING: \"className property of dismissIcon option must be a String\",\r\n  DISMISS_ICON_INVALID: \"content property of dismissIcon option must be a valid React element\",\r\n\r\n  // animations\r\n  ANIMATION_IN: \"animationIn option must be an array\",\r\n  ANIMATION_OUT: \"animationOut option must be an array\",\r\n\r\n  // dismiss\r\n  DISMISS_REQUIRED: \"duration property of dismiss option is required\",\r\n  DISMISS_NUMBER: \"duration property of dismiss option must be a Number\",\r\n  DISMISS_POSITIVE: \"duration property of dismiss option must be a positive Number\",\r\n\r\n  // title\r\n  TITLE_STRING: \"title option must be a String.\",\r\n\r\n  // message\r\n  MESSAGE_REQUIRED: \"message option is required\",\r\n  MESSAGE_STRING: \"message option must be a String\",\r\n\r\n  // type\r\n  TYPE_REQUIRED: \"type option is required\",\r\n  TYPE_STRING: \"type option must be a String\",\r\n  TYPE_NOT_EXISTENT: \"type option not found\",\r\n\r\n  // container\r\n  CONTAINER_REQUIRED: \"container option is required\",\r\n  CONTAINER_STRING: \"container option must be a String\",\r\n\r\n  // dismissable\r\n  DISMISSABLE_CLICK_BOOL: \"click property of dismissable option must be a Boolean\",\r\n  DISMISSABLE_TOUCH_BOOL: \"touch property of dismissable option must be a Boolean\",\r\n\r\n  // width\r\n  WIDTH_NUMBER: \"width option must be a Number\",\r\n\r\n  // insert\r\n  INSERT_STRING: \"insert option must be a String\",\r\n\r\n  // transition\r\n  TRANSITION_DURATION_NUMBER: \"duration property of transition option must be a Number\",\r\n  TRANSITION_CUBICBEZIER_NUMBER: \"cubicBezier property of transition option must be a String\",\r\n  TRANSITION_DELAY_NUMBER: \"delay property of transition option must be a Number\",\r\n\r\n  // custom types\r\n  TYPE_NOT_FOUND: \"custom type not found\"\r\n};\r\n","export function cssWidth(width) {\r\n  return width ? `${width}px` : undefined;\r\n}\r\n\r\nexport function isNullOrUndefined(prop) {\r\n  return prop === null || prop === undefined;\r\n}\r\n\r\nexport function isString(object) {\r\n  return typeof object === \"string\";\r\n}\r\n\r\nexport function isNumber(object) {\r\n  return typeof object === \"number\";\r\n}\r\n\r\nexport function isBoolean(object) {\r\n  return typeof object === \"boolean\";\r\n}\r\n\r\nexport function isArray(object) {\r\n  return !isNullOrUndefined(object) && object.constructor === Array;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ERROR,\r\n  NOTIFICATION_TYPE\r\n} from \"src/constants\";\r\nimport {\r\n  isNullOrUndefined,\r\n  isString,\r\n  isNumber,\r\n  isBoolean,\r\n  isArray\r\n} from \"src/utils\";\r\n\r\nexport function validateDismissIconOption(dismissIcon) {\r\n  // skip validation for undefined option\r\n  if (isNullOrUndefined(dismissIcon)) return;\r\n\r\n  const {\r\n    className: iconClassName,\r\n    content: iconContent\r\n  } = dismissIcon;\r\n\r\n  if (!iconClassName) {\r\n    // className is required\r\n    throw new Error(ERROR.DISMISS_ICON_CLASS);\r\n  }\r\n\r\n  if (!isString(iconClassName)) {\r\n    // icon's `className` must be a String\r\n    throw new Error(ERROR.DISMISS_ICON_STRING);\r\n  }\r\n\r\n  if (!iconContent) {\r\n    // icon's content is required\r\n    throw new Error(ERROR.DISMISS_ICON_CONTENT);\r\n  }\r\n\r\n  if (!React.isValidElement(iconContent)) {\r\n    // icon's content must be a valid react element\r\n    throw new Error(ERROR.DISMISS_ICON_INVALID);\r\n  }\r\n}\r\n\r\nexport function validateAnimationIn(animationIn) {\r\n  // return empty array instead of undefined\r\n  if (isNullOrUndefined(animationIn)) return [];\r\n\r\n  if (!isArray(animationIn)) {\r\n    // option must be an Array\r\n    throw new Error(ERROR.ANIMATION_IN);\r\n  }\r\n\r\n  return animationIn;\r\n}\r\n\r\nexport function validateAnimationOut(animationOut) {\r\n  // return empty array instead of undefined\r\n  if (isNullOrUndefined(animationOut)) return [];\r\n\r\n  if (!isArray(animationOut)) {\r\n    // option must be an Array\r\n    throw new Error(ERROR.ANIMATION_OUT);\r\n  }\r\n\r\n  return animationOut;\r\n}\r\n\r\nexport function validateTimeoutDismissOption(dismiss) {\r\n  // skip validation for undefined option\r\n  if (!dismiss) return;\r\n\r\n  if (isNullOrUndefined(dismiss.duration)) {\r\n    // duration is required\r\n    throw new Error(ERROR.DISMISS_REQUIRED);\r\n  }\r\n\r\n  if (!isNumber(dismiss.duration)) {\r\n    // duration must be a Number\r\n    throw new Error(ERROR.DISMISS_NUMBER);\r\n  }\r\n\r\n  if (dismiss.duration < 0) {\r\n    // duration must be positive\r\n    throw new Error(ERROR.DISMISS_POSITIVE);\r\n  }\r\n}\r\n\r\nexport function validateTransition(transition, defaults) {\r\n  const {\r\n    duration,\r\n    cubicBezier,\r\n    delay\r\n  } = defaults;\r\n\r\n  const transitionOptions = transition || {};\r\n\r\n  if (isNullOrUndefined(transitionOptions.duration)) {\r\n    // set default duration\r\n    transitionOptions.duration = duration;\r\n  }\r\n\r\n  if (isNullOrUndefined(transitionOptions.cubicBezier)) {\r\n    // set default timing function\r\n    transitionOptions.cubicBezier = cubicBezier;\r\n  }\r\n\r\n  if (isNullOrUndefined(transitionOptions.delay)) {\r\n    // set default delay\r\n    transitionOptions.delay = delay;\r\n  }\r\n\r\n  if (!isNumber(transitionOptions.duration)) {\r\n    // throw if duration is NaN\r\n    throw new Error(ERROR.TRANSITION_DURATION_NUMBER);\r\n  }\r\n\r\n  if (!isString(transitionOptions.cubicBezier)) {\r\n    // throw if cubicBezier is not a String\r\n    throw new Error(ERROR.TRANSITION_CUBICBEZIER_NUMBER);\r\n  }\r\n\r\n  if (!isNumber(transitionOptions.delay)) {\r\n    // throw if delay is NaN\r\n    throw new Error(ERROR.TRANSITION_DELAY_NUMBER);\r\n  }\r\n\r\n  return transitionOptions;\r\n}\r\n\r\nexport function validateTitle(notification) {\r\n  const {\r\n    content,\r\n    title\r\n  } = notification;\r\n\r\n  // title is not required\r\n  if (content || isNullOrUndefined(title)) return;\r\n\r\n  if (!isString(title)) {\r\n    // title must be a String if defined\r\n    throw new Error(ERROR.TITLE_STRING);\r\n  }\r\n}\r\n\r\nexport function validateMessage(notification) {\r\n  const { content, message } = notification;\r\n\r\n  // message not required\r\n  if (content) return;\r\n\r\n  if (!message) {\r\n    // message is required\r\n    throw new Error(ERROR.MESSAGE_REQUIRED);\r\n  }\r\n\r\n  if (!isString(message)) {\r\n    // message must be a String\r\n    throw new Error(ERROR.MESSAGE_STRING);\r\n  }\r\n}\r\n\r\nexport function validateType(notification, userDefinedTypes) {\r\n  const { content, type } = notification;\r\n\r\n  // skip type validation\r\n  if (content) return undefined;\r\n\r\n  if (!type) {\r\n    // type is required\r\n    throw new Error(ERROR.TYPE_REQUIRED);\r\n  }\r\n\r\n  if (!isString(type)) {\r\n    // type must be a String\r\n    throw new Error(ERROR.TYPE_STRING);\r\n  }\r\n\r\n  if (\r\n    !userDefinedTypes\r\n    && type !== NOTIFICATION_TYPE.SUCCESS\r\n    && type !== NOTIFICATION_TYPE.DANGER\r\n    && type !== NOTIFICATION_TYPE.INFO\r\n    && type !== NOTIFICATION_TYPE.DEFAULT\r\n    && type !== NOTIFICATION_TYPE.WARNING\r\n  ) {\r\n    // throw error if missing type\r\n    throw new Error(ERROR.TYPE_NOT_EXISTENT);\r\n  }\r\n\r\n  return type.toLowerCase();\r\n}\r\n\r\nexport function validateContainer(container) {\r\n  if (!container) {\r\n    // container is required\r\n    throw new Error(ERROR.CONTAINER_REQUIRED);\r\n  }\r\n\r\n  if (!isString(container)) {\r\n    // container must be a String\r\n    throw new Error(ERROR.CONTAINER_STRING);\r\n  }\r\n\r\n  return container.toLowerCase();\r\n}\r\n\r\nexport function validateDismissable(dismissable) {\r\n  const option = dismissable;\r\n\r\n  if (!option) {\r\n    // return default values if option is undefined\r\n    return { click: true, touch: true };\r\n  }\r\n\r\n  if (isNullOrUndefined(option.click)) {\r\n    // set default value\r\n    option.click = true;\r\n  }\r\n\r\n  if (isNullOrUndefined(option.touch)) {\r\n    // set default value\r\n    option.touch = true;\r\n  }\r\n\r\n  if (!isBoolean(option.click)) {\r\n    // option must be Boolean\r\n    throw new Error(ERROR.DISMISSABLE_CLICK_BOOL);\r\n  }\r\n\r\n  if (!isBoolean(option.touch)) {\r\n    // option must be Boolean\r\n    throw new Error(ERROR.DISMISSABLE_TOUCH_BOOL);\r\n  }\r\n\r\n  return option;\r\n}\r\n\r\nexport function validateInsert(insert) {\r\n  // set default insertion\r\n  if (!insert) return \"top\";\r\n\r\n  if (!isString(insert)) {\r\n    // must be a String value\r\n    throw new Error(ERROR.INSERT_STRING);\r\n  }\r\n\r\n  return insert.toLowerCase();\r\n}\r\n\r\nexport function validateWidth(width) {\r\n  // width is not required\r\n  if (isNullOrUndefined(width)) return 0;\r\n\r\n  if (!isNumber(width)) {\r\n    // width must be a valid Number\r\n    throw new Error(ERROR.WIDTH_NUMBER);\r\n  }\r\n\r\n  return width;\r\n}\r\n\r\nexport function validateUserDefinedTypes(notification, definedTypes) {\r\n  const { type } = notification;\r\n\r\n  // skip validation in this case\r\n  if (notification.content) return undefined;\r\n\r\n  if (\r\n    type === NOTIFICATION_TYPE.SUCCESS\r\n    || type === NOTIFICATION_TYPE.DANGER\r\n    || type === NOTIFICATION_TYPE.INFO\r\n    || type === NOTIFICATION_TYPE.DEFAULT\r\n    || type === NOTIFICATION_TYPE.WARNING\r\n    || !definedTypes\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  // search for custom type in array\r\n  if (!definedTypes.find(p => p.name === type)) {\r\n    // custom type not found, throw exception\r\n    throw new Error(ERROR.TYPE_NOT_FOUND);\r\n  }\r\n\r\n  return definedTypes;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  ERROR,\r\n  NOTIFICATION_BASE_CLASS,\r\n  CONTAINER,\r\n  INSERTION,\r\n  NOTIFICATION_TYPE,\r\n  NOTIFICATION_STAGE\r\n} from \"src/constants\";\r\n\r\nimport {\r\n  validateDismissIconOption,\r\n  validateAnimationIn,\r\n  validateAnimationOut,\r\n  validateTimeoutDismissOption,\r\n  validateTransition,\r\n  validateTitle,\r\n  validateMessage,\r\n  validateType,\r\n  validateContainer,\r\n  validateDismissable,\r\n  validateInsert,\r\n  validateWidth,\r\n  validateUserDefinedTypes\r\n} from \"src/validators\";\r\n\r\nimport {\r\n  cssWidth,\r\n  isNullOrUndefined\r\n} from \"src/utils\";\r\n\r\nexport function isBottomContainer(container) {\r\n  return (\r\n    container === CONTAINER.BOTTOM_LEFT\r\n    || container === CONTAINER.BOTTOM_RIGHT\r\n    || container === CONTAINER.BOTTOM_CENTER\r\n  );\r\n}\r\n\r\nexport function isTopContainer(container) {\r\n  return (\r\n    container === CONTAINER.TOP_LEFT\r\n    || container === CONTAINER.TOP_RIGHT\r\n    || container === CONTAINER.TOP_CENTER\r\n  );\r\n}\r\n\r\nexport function shouldNotificationHaveSliding(notification) {\r\n  return (\r\n    // slide DOWN if container is top and insertion is at top\r\n    (notification.insert === INSERTION.TOP && isTopContainer(notification.container))\r\n    // slide UP if container is bottom and insertion is at bottom\r\n    || (notification.insert === INSERTION.BOTTOM && isBottomContainer(notification.container))\r\n  );\r\n}\r\n\r\nexport function htmlClassesForExistingType(type) {\r\n  const lowerCaseType = type.toLowerCase();\r\n\r\n  switch (lowerCaseType) {\r\n    case NOTIFICATION_TYPE.DEFAULT:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-default\"];\r\n    case NOTIFICATION_TYPE.SUCCESS:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-success\"];\r\n    case NOTIFICATION_TYPE.DANGER:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-danger\"];\r\n    case NOTIFICATION_TYPE.WARNING:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-warning\"];\r\n    case NOTIFICATION_TYPE.INFO:\r\n      return [NOTIFICATION_BASE_CLASS, \"notification-info\"];\r\n    default:\r\n      return [NOTIFICATION_BASE_CLASS];\r\n  }\r\n}\r\n\r\nexport function getHtmlClassesForType(notification) {\r\n  const {\r\n    // option set by user\r\n    type,\r\n    // array value containing all custom types\r\n    userDefinedTypes\r\n  } = notification;\r\n\r\n  if (notification.content) {\r\n    // return only base class if type is not defined\r\n    return [NOTIFICATION_BASE_CLASS];\r\n  }\r\n\r\n  if (!userDefinedTypes) {\r\n    // existing type\r\n    return htmlClassesForExistingType(type);\r\n  }\r\n\r\n  // look for custom type if any defined\r\n  const foundType = userDefinedTypes.find(q => q.name === type);\r\n\r\n  if (!foundType) {\r\n    // custom type not found, throw error\r\n    throw new Error(ERROR.TYPE_NOT_FOUND);\r\n  }\r\n\r\n  // append base class to html classes\r\n  return [NOTIFICATION_BASE_CLASS].concat(foundType.htmlClasses);\r\n}\r\n\r\nexport function getNotificationsForMobileView(notifications) {\r\n  const bottom = [];\r\n  const top = [];\r\n\r\n  notifications.forEach((notification) => {\r\n    const container = notification.container.toLowerCase();\r\n    if (isTopContainer(container)) {\r\n      top.push(notification);\r\n    } else if (isBottomContainer(container)) {\r\n      bottom.push(notification);\r\n    } else throw new Error(`Container ${notification.container} is not valid`);\r\n  });\r\n\r\n  return { top, bottom };\r\n}\r\n\r\nexport function getNotificationsForEachContainer(notifications) {\r\n  const topLeft = [];\r\n  const topRight = [];\r\n  const topCenter = [];\r\n  const bottomLeft = [];\r\n  const bottomRight = [];\r\n  const bottomCenter = [];\r\n\r\n  notifications.forEach((notification) => {\r\n    const container = notification.container.toLowerCase();\r\n    if (container === CONTAINER.TOP_LEFT) {\r\n      topLeft.push(notification);\r\n    } else if (container === CONTAINER.TOP_RIGHT) {\r\n      topRight.push(notification);\r\n    } else if (container === CONTAINER.TOP_CENTER) {\r\n      topCenter.push(notification);\r\n    } else if (container === CONTAINER.BOTTOM_LEFT) {\r\n      bottomLeft.push(notification);\r\n    } else if (container === CONTAINER.BOTTOM_RIGHT) {\r\n      bottomRight.push(notification);\r\n    } else if (container === CONTAINER.BOTTOM_CENTER) {\r\n      bottomCenter.push(notification);\r\n    } else {\r\n      throw new Error(`Container ${notification.container} is not valid`);\r\n    }\r\n  });\r\n\r\n  return {\r\n    topLeft,\r\n    topRight,\r\n    topCenter,\r\n    bottomLeft,\r\n    bottomRight,\r\n    bottomCenter\r\n  };\r\n}\r\n\r\nexport function getCubicBezierTransition(\r\n  duration = 500,\r\n  cubicBezier = \"linear\",\r\n  delay = 0,\r\n  property = \"height\"\r\n) {\r\n  return `${duration}ms ${property} ${cubicBezier} ${delay}ms`;\r\n}\r\n\r\nexport function slidingExitTransition(notification) {\r\n  return getCubicBezierTransition(\r\n    notification.slidingExit.duration,\r\n    notification.slidingExit.cubicBezier,\r\n    notification.slidingExit.delay,\r\n    \"all\"\r\n  );\r\n}\r\n\r\nexport function touchSwipeTransition(notification) {\r\n  const { swipe } = notification.touchSlidingExit;\r\n\r\n  return getCubicBezierTransition(\r\n    swipe.duration,\r\n    swipe.cubicBezier,\r\n    swipe.delay,\r\n    \"left\"\r\n  );\r\n}\r\n\r\nexport function touchFadeTransition(notification) {\r\n  const { fade } = notification.touchSlidingExit;\r\n\r\n  return getCubicBezierTransition(\r\n    fade.duration,\r\n    fade.cubicBezier,\r\n    fade.delay,\r\n    \"opacity\"\r\n  );\r\n}\r\n\r\nexport function getInitialSlidingState({ notification, isFirstNotification }) {\r\n  // no sliding needed for first notification in container\r\n  const hasSliding = shouldNotificationHaveSliding(notification) && !isFirstNotification;\r\n  const state = {};\r\n\r\n  // set default classes for animated element\r\n  state.animatedElementClasses = getHtmlClassesForType(notification);\r\n  state.rootElementStyle = {\r\n    height: \"0\",\r\n    marginBottom: 0,\r\n    overflow: \"hidden\",\r\n    width: cssWidth(notification.width)\r\n  };\r\n\r\n  if (hasSliding) {\r\n    // hide content by toggling visibility while sliding\r\n    state.animatedElementClasses.push(\"notification-invisible\");\r\n  } else if (notification.animationIn && notification.animationIn.length > 0) {\r\n    // add user defined notification classes if sliding will not occur\r\n    notification.animationIn.forEach(item => state.animatedElementClasses.push(item));\r\n  }\r\n\r\n  state.hasSliding = hasSliding;\r\n  return state;\r\n}\r\n\r\nexport function getChildStyleForTouchTransitionExit(notification, startX, currentX) {\r\n  const width = window.innerWidth * 2;\r\n  const touchSwipe = touchSwipeTransition(notification);\r\n  const touchFade = touchFadeTransition(notification);\r\n\r\n  return {\r\n    opacity: 0,\r\n    position: \"relative\",\r\n    transition: `${touchSwipe}, ${touchFade}`,\r\n\r\n    // for currentX > startX\r\n    // we slide to the right limit\r\n    // otherwise we slide to the left limit\r\n    left: `${currentX - startX >= 0 ? width : -width}px`\r\n  };\r\n}\r\n\r\nexport function handleTouchSlidingAnimationExit(notification, currentX, startX) {\r\n  // set current html classes\r\n  const animatedElementClasses = getHtmlClassesForType(notification);\r\n  // set opacity and left to pull-out notification\r\n  const childElementStyle = getChildStyleForTouchTransitionExit(notification, startX, currentX);\r\n  // sliding out transition\r\n  const slidingTransition = slidingExitTransition(notification);\r\n\r\n  return {\r\n    childElementStyle,\r\n    animatedElementClasses,\r\n    // slide to height 0\r\n    rootElementStyle: {\r\n      height: 0,\r\n      marginBottom: 0,\r\n      transition: slidingTransition,\r\n      width: cssWidth(notification.width)\r\n    },\r\n  };\r\n}\r\n\r\nexport function handleSlidingAnimationExit(notification) {\r\n  const { animationOut } = notification;\r\n  const animatedElementClasses = getHtmlClassesForType(notification);\r\n\r\n  if (animationOut) {\r\n    // add CSS classes if any defined\r\n    animationOut.forEach(item => animatedElementClasses.push(item));\r\n  }\r\n\r\n  return {\r\n    // slide element to height 0\r\n    rootElementStyle: {\r\n      height: 0,\r\n      marginBottom: 0,\r\n      transition: slidingExitTransition(notification),\r\n      width: cssWidth(notification.width)\r\n    },\r\n    animatedElementClasses\r\n  };\r\n}\r\n\r\nexport function handleStageTransition(notification, state) {\r\n  let animatedElementClasses;\r\n  let rootElementStyle;\r\n\r\n  const {\r\n    TOUCH_SLIDING_ANIMATION_EXIT,\r\n    SLIDING_ANIMATION_EXIT\r\n  } = NOTIFICATION_STAGE;\r\n\r\n  const {\r\n    animatedElementClasses: stateAnimatedElementClasses,\r\n    rootElementStyle: stateRootStyle,\r\n    currentX,\r\n    startX\r\n  } = state;\r\n\r\n  if (notification.stage === TOUCH_SLIDING_ANIMATION_EXIT) {\r\n    return handleTouchSlidingAnimationExit(notification, currentX, startX);\r\n  }\r\n\r\n  if (notification.stage === SLIDING_ANIMATION_EXIT) {\r\n    return handleSlidingAnimationExit(notification);\r\n  }\r\n\r\n  if (notification.resized) {\r\n    // window got resized, do not apply animations\r\n    rootElementStyle = stateRootStyle;\r\n    animatedElementClasses = getHtmlClassesForType(notification);\r\n  } else {\r\n    // use values from state\r\n    rootElementStyle = stateRootStyle;\r\n    animatedElementClasses = stateAnimatedElementClasses;\r\n  }\r\n\r\n  return {\r\n    rootElementStyle,\r\n    animatedElementClasses\r\n  };\r\n}\r\n\r\nexport function hasFullySwiped(diffX) {\r\n  const swipeLength = Math.abs(diffX);\r\n  const requiredSwipeLength = (40 / 100) * window.innerWidth;\r\n\r\n  return swipeLength >= requiredSwipeLength;\r\n}\r\n\r\nexport function getRootHeightStyle(notification, scrollHeight) {\r\n  return {\r\n    height: `${scrollHeight}px`,\r\n    width: cssWidth(notification.width),\r\n    transition: getCubicBezierTransition(\r\n      notification.slidingExit.duration,\r\n      notification.slidingExit.cubicBezier,\r\n      notification.slidingExit.delay\r\n    )\r\n  };\r\n}\r\n\r\nexport function getIconHtmlContent(notification, onClickHandler) {\r\n  // use icon defined by user\r\n  if (notification.dismissIcon) {\r\n    return (\r\n      <div\r\n        className={notification.dismissIcon.className}\r\n        onClick={onClickHandler}\r\n      >\r\n        {notification.dismissIcon.content}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // use standard icon\r\n  return (\r\n    <div\r\n      className=\"notification-close\"\r\n      onClick={onClickHandler}\r\n    >\r\n      <span>&times;</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function getRandomId() {\r\n  return Math.random().toString(36).substr(2, 9);\r\n}\r\n\r\nexport function getNotificationOptions(options, userDefinedTypes) {\r\n  const notification = options;\r\n  const {\r\n    insert,\r\n    container,\r\n    dismissIcon,\r\n    animationIn,\r\n    animationOut,\r\n    slidingEnter,\r\n    slidingExit,\r\n    touchSlidingBack,\r\n    touchSlidingExit,\r\n    dismissable,\r\n    dismiss,\r\n    width\r\n  } = notification;\r\n\r\n  // for now we'll use Math.random for id\r\n  notification.id = getRandomId();\r\n\r\n  // validate notification's title\r\n  validateTitle(notification);\r\n\r\n  // validate notification's body message\r\n  validateMessage(notification);\r\n\r\n  // validate notification's type\r\n  notification.type = validateType(notification, userDefinedTypes);\r\n\r\n  if (userDefinedTypes && !notification.content) {\r\n    // validate user defined types if any\r\n    notification.userDefinedTypes = validateUserDefinedTypes(notification, userDefinedTypes);\r\n  }\r\n\r\n  // validate notification's container\r\n  notification.container = validateContainer(container);\r\n\r\n  // set default insertion\r\n  notification.insert = validateInsert(insert);\r\n\r\n  // set default dismissable options\r\n  notification.dismissable = validateDismissable(dismissable);\r\n\r\n  // assert `dismissIcon` matches rules\r\n  validateDismissIconOption(dismissIcon);\r\n\r\n  // validate `animationIn` array\r\n  notification.animationIn = validateAnimationIn(animationIn);\r\n\r\n  // validate `animationOut` array\r\n  notification.animationOut = validateAnimationOut(animationOut);\r\n\r\n  if (!isNullOrUndefined(width)) {\r\n    // set width option only if defined\r\n    notification.width = validateWidth(width);\r\n  }\r\n\r\n  // defaults\r\n  const slidingEnterDefaults = { duration: 600, cubicBezier: \"linear\", delay: 0 };\r\n  const slidingExitDefaults = { duration: 600, cubicBezier: \"linear\", delay: 0 };\r\n  const swipeBackDefaults = { duration: 600, cubicBezier: \"ease-in\", delay: 0 };\r\n  const swipeExitDefaults = { duration: 600, cubicBezier: \"ease-in\", delay: 0 };\r\n  const swipeCompleteDefaults = { duration: 300, cubicBezier: \"ease-in\", delay: 0 };\r\n\r\n  // set defaults for sliding enter transition\r\n  notification.slidingEnter = validateTransition(slidingEnter, slidingEnterDefaults);\r\n\r\n  // set defaults for sliding exit transition\r\n  notification.slidingExit = validateTransition(slidingExit, slidingExitDefaults);\r\n\r\n  // set defaults for sliding back on touchEnd/touchCancel\r\n  notification.touchSlidingBack = validateTransition(touchSlidingBack, swipeBackDefaults);\r\n\r\n  // let it empty object if undefined\r\n  notification.touchSlidingExit = touchSlidingExit || {};\r\n\r\n  // set defaults for swipe transition when swipe is complete\r\n  notification.touchSlidingExit.swipe = validateTransition(\r\n    notification.touchSlidingExit.swipe || {},\r\n    swipeExitDefaults\r\n  );\r\n\r\n  // set defaults for fade transition when swipe is complete\r\n  notification.touchSlidingExit.fade = validateTransition(\r\n    notification.touchSlidingExit.fade || {},\r\n    swipeCompleteDefaults\r\n  );\r\n\r\n  // assert `dismiss` matches rules\r\n  validateTimeoutDismissOption(dismiss);\r\n\r\n  return notification;\r\n}\r\n","import React from \"react\";\r\nimport { NOTIFICATION_STAGE } from \"src/constants\";\r\nimport { cssWidth } from \"src/utils\";\r\nimport {\r\n  getHtmlClassesForType,\r\n  handleStageTransition,\r\n  getCubicBezierTransition,\r\n  hasFullySwiped,\r\n  getRootHeightStyle,\r\n  getInitialSlidingState,\r\n  getIconHtmlContent\r\n} from \"src/helpers\";\r\n\r\nexport default class ReactNotification extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.endOfSmartSliding = false;\r\n\r\n    // methods binding\r\n    this.onTransitionEnd = this.onTransitionEnd.bind(this);\r\n    this.onNotificationClick = this.onNotificationClick.bind(this);\r\n    this.setDismissTimeout = this.setDismissTimeout.bind(this);\r\n\r\n    // smart sliding end\r\n    this.onSmartSlidingEnd = this.onSmartSlidingEnd.bind(this);\r\n    this.onTouchSmartSlidingEnd = this.onTouchSmartSlidingEnd.bind(this);\r\n\r\n    // touch events\r\n    this.onTouchStart = this.onTouchStart.bind(this);\r\n    this.onTouchMove = this.onTouchMove.bind(this);\r\n    this.onTouchEnd = this.onTouchEnd.bind(this);\r\n\r\n    // ref elements\r\n    this.rootDOM = React.createRef();\r\n\r\n    // component's state\r\n    this.state = getInitialSlidingState(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // start sliding\r\n    this.smartSliding();\r\n\r\n    // set notification to be dismissed by timeout\r\n    this.setRemovalTimeout(this.props.notification.dismiss);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timeoutId) {\r\n      this.timeoutId = clearTimeout(this.timeoutId);\r\n    }\r\n  }\r\n\r\n  setDismissTimeout(duration) {\r\n    // timeout handler\r\n    const timeoutDismissHandler = () => {\r\n      const { notification, toggleTimeoutRemoval } = this.props;\r\n\r\n      // skip timeout removal if it's already in a removal process\r\n      if (notification.stage === NOTIFICATION_STAGE.MANUAL_REMOVAL\r\n        || notification.stage === NOTIFICATION_STAGE.TOUCH_SLIDING_ANIMATION_EXIT) return;\r\n\r\n      this.setState({\r\n        rootElementStyle: getRootHeightStyle(\r\n          notification,\r\n          this.rootDOM.current.scrollHeight\r\n        )\r\n      }, () => requestAnimationFrame(() => toggleTimeoutRemoval(notification)));\r\n    };\r\n\r\n    // set timeout to automatically dismiss notification\r\n    this.timeoutId = setTimeout(timeoutDismissHandler, duration);\r\n  }\r\n\r\n  setRemovalTimeout(dismiss) {\r\n    if (dismiss && dismiss.duration > 0) {\r\n      // make sure option is defined and set\r\n      this.setDismissTimeout(dismiss.duration);\r\n    }\r\n  }\r\n\r\n  onTransitionEnd() {\r\n    // sliding has finished, we need to add CSS classes to animate\r\n\r\n    const { notification } = this.props;\r\n    const { animationIn } = notification;\r\n\r\n    // get html classes for type\r\n    let animatedElementClasses = getHtmlClassesForType(notification);\r\n\r\n    // make element visible now\r\n    animatedElementClasses.push(\"notification-visible\");\r\n\r\n    // append animation classes\r\n    animatedElementClasses = animatedElementClasses.concat(animationIn || []);\r\n\r\n    this.setState({\r\n      animatedElementClasses,\r\n      rootElementStyle: {\r\n        height: \"auto\",\r\n        width: cssWidth(notification.width)\r\n      }\r\n    });\r\n  }\r\n\r\n  onTouchSmartSlidingEnd(e) {\r\n    // stop propagation of transitionEnd\r\n    e.stopPropagation();\r\n\r\n    if (!e.target.isSameNode(this.rootDOM.current)) {\r\n      // skip if target is rootDOM node\r\n      return;\r\n    }\r\n\r\n    if (this.endOfSmartSliding) {\r\n      // remove notification\r\n      this.props.toggleRemoval(this.props.notification);\r\n    }\r\n\r\n    // both animation and sliding have finished\r\n    this.endOfSmartSliding = true;\r\n  }\r\n\r\n  onSmartSlidingEnd() {\r\n    const { notification } = this.props;\r\n\r\n    if (\r\n      !notification.animationOut\r\n      || !notification.animationOut.length\r\n      || this.endOfSmartSliding\r\n    ) {\r\n      this.props.toggleRemoval(notification);\r\n    }\r\n\r\n    // both animationEnd and transitionEnd have finished\r\n    this.endOfSmartSliding = true;\r\n  }\r\n\r\n  smartSliding() {\r\n    const { notification } = this.props;\r\n    const { slidingEnter } = notification;\r\n\r\n    const animatedElementClasses = getHtmlClassesForType(notification);\r\n    const rootElementStyle = {\r\n      // set sliding transition unless `resize` event has been fired\r\n      // in which case we no longer slide nor animate\r\n      transition: notification.resized\r\n        ? undefined\r\n        : getCubicBezierTransition(\r\n          slidingEnter.duration,\r\n          slidingEnter.cubicBezier,\r\n          slidingEnter.delay\r\n        ),\r\n\r\n      // overwrite notification's width\r\n      width: cssWidth(notification.width),\r\n\r\n      // set height instead of auto\r\n      height: `${this.rootDOM.current.scrollHeight}px`\r\n    };\r\n\r\n    // if `resize` has been fired then no animation is going to happen\r\n    if (!notification.resized\r\n      && notification.animationIn\r\n      && notification.animationIn.length > 0) {\r\n      notification.animationIn.forEach(item => animatedElementClasses.push(item));\r\n    }\r\n\r\n    this.setState({\r\n      rootElementStyle,\r\n      animatedElementClasses\r\n    });\r\n  }\r\n\r\n  onNotificationClick() {\r\n    const { notification } = this.props;\r\n\r\n    const rootElementStyle = getRootHeightStyle(\r\n      notification,\r\n      this.rootDOM.current.scrollHeight\r\n    );\r\n\r\n    this.setState({\r\n      rootElementStyle\r\n    }, () => requestAnimationFrame(() => {\r\n      this.props.onClickHandler(notification);\r\n    }));\r\n  }\r\n\r\n  onTouchStart(e) {\r\n    this.setState({\r\n      startX: e.touches[0].pageX,\r\n      currentX: e.touches[0].pageX\r\n    });\r\n  }\r\n\r\n  onTouchMove(e) {\r\n    const {\r\n      notification,\r\n      toggleTouchEnd\r\n    } = this.props;\r\n\r\n    // distance between start and current\r\n    const distance = e.touches[0].pageX - this.state.startX;\r\n\r\n    if (hasFullySwiped(distance)) {\r\n      // move notification to the left/right by changing style\r\n      this.setState({\r\n        animatedElementClasses: getHtmlClassesForType(notification),\r\n        rootElementStyle: getRootHeightStyle(\r\n          notification,\r\n          this.rootDOM.current.scrollHeight\r\n        )\r\n      }, () => {\r\n        // remove notification from state\r\n        requestAnimationFrame(() => toggleTouchEnd(notification));\r\n      });\r\n      return;\r\n    }\r\n\r\n    // swiping is still in place\r\n    this.setState({\r\n      currentX: e.touches[0].pageX,\r\n      childElementStyle: {\r\n        position: \"relative\",\r\n        left: `${0 + distance}px`\r\n      }\r\n    });\r\n  }\r\n\r\n  onTouchEnd() {\r\n    const { touchSlidingBack } = this.props.notification;\r\n\r\n    this.setState({\r\n      childElementStyle: {\r\n        left: \"0\",\r\n        position: \"relative\",\r\n        transition: getCubicBezierTransition(\r\n          touchSlidingBack.duration,\r\n          touchSlidingBack.cubicBezier,\r\n          touchSlidingBack.delay,\r\n          \"left\"\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { notification } = this.props;\r\n    let { childElementStyle } = this.state;\r\n    let { onAnimationEnd } = this;\r\n    let onNotificationClick = null;\r\n    let touchHasEnded = false;\r\n\r\n    // set onTransitionEnd event if notification has sliding\r\n    let onTransitionEnd = this.state.hasSliding\r\n      ? this.onTransitionEnd\r\n      : null;\r\n\r\n    const stage = handleStageTransition(notification, this.state);\r\n    const animatedElementClasses = (stage.animatedElementClasses || []).join(\" \");\r\n    let { rootElementStyle } = stage;\r\n\r\n    // set `onClick` event if notification is dismissable\r\n    if (notification.dismissable.click) {\r\n      ({ onNotificationClick } = this);\r\n    }\r\n\r\n    if (notification.stage === NOTIFICATION_STAGE.MANUAL_REMOVAL) {\r\n      onAnimationEnd = null;\r\n      rootElementStyle = getRootHeightStyle(notification, this.rootDOM.current.scrollHeight);\r\n    } else if (notification.stage === NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT) {\r\n      onAnimationEnd = this.onSmartSlidingEnd;\r\n      onTransitionEnd = this.onSmartSlidingEnd;\r\n    } else if (notification.stage === NOTIFICATION_STAGE.TOUCH_SLIDING_ANIMATION_EXIT) {\r\n      onAnimationEnd = this.onTouchSmartSlidingEnd;\r\n      onTransitionEnd = this.onTouchSmartSlidingEnd;\r\n      onNotificationClick = null;\r\n      ({ childElementStyle } = stage);\r\n      touchHasEnded = true;\r\n    }\r\n\r\n    if (notification.content) {\r\n      return (\r\n        <div\r\n          onTouchStart={touchHasEnded ? null : this.onTouchStart}\r\n          onTouchMove={touchHasEnded ? null : this.onTouchMove}\r\n          onTouchEnd={touchHasEnded ? null : this.onTouchEnd}\r\n          onTouchCancel={touchHasEnded ? null : this.onTouchEnd}\r\n          onClick={onNotificationClick}\r\n          className=\"notification-item-root\"\r\n          onAnimationEnd={onAnimationEnd}\r\n          onTransitionEnd={onTransitionEnd}\r\n          ref={this.rootDOM}\r\n          style={rootElementStyle}\r\n        >\r\n          <div\r\n            className={`${animatedElementClasses} notification-item-child`}\r\n            style={childElementStyle}\r\n          >\r\n            {notification.content}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const icon = <div\r\n      className=\"notification-close\"\r\n      onClick={this.onNotificationClick}>\r\n      <span>&times;</span>\r\n    </div>;\r\n\r\n    const htmlCloseIconContent = notification.dismissIcon\r\n      ? getIconHtmlContent(notification, this.onNotificationClick)\r\n      : icon;\r\n\r\n    let notificationTitle;\r\n    if (notification.title) {\r\n      notificationTitle = <h4 className=\"notification-title\">{notification.title}</h4>;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        onTouchStart={touchHasEnded ? null : this.onTouchStart}\r\n        onTouchMove={touchHasEnded ? null : this.onTouchMove}\r\n        onTouchEnd={touchHasEnded ? null : this.onTouchEnd}\r\n        onTouchCancel={touchHasEnded ? null : this.onTouchEnd}\r\n        onClick={onNotificationClick}\r\n        className=\"notification-item-root\"\r\n        onAnimationEnd={onAnimationEnd}\r\n        onTransitionEnd={onTransitionEnd}\r\n        ref={this.rootDOM}\r\n        style={rootElementStyle}\r\n      >\r\n        <div\r\n          className={`${animatedElementClasses} notification-item-child`}\r\n          style={childElementStyle}\r\n        >\r\n          <div className=\"notification-content\">\r\n            {htmlCloseIconContent}\r\n            {notificationTitle}\r\n            <p className=\"notification-message\">\r\n              {this.props.notification.message}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactNotification from \"src/react-notification\";\r\nimport {\r\n  isArray,\r\n  isNullOrUndefined\r\n} from \"src/utils\";\r\n\r\nimport {\r\n  INSERTION,\r\n  NOTIFICATION_STAGE,\r\n  REMOVAL\r\n} from \"src/constants\";\r\n\r\nimport {\r\n  getNotificationsForEachContainer,\r\n  getNotificationsForMobileView,\r\n  getNotificationOptions\r\n} from \"src/helpers\";\r\n\r\n// react-notifications-component theme\r\nimport \"src/scss/notification.scss\";\r\n\r\nclass ReactNotificationComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // option for responsiveness (defaults to true)\r\n      isMobile: props.isMobile,\r\n      // responsiveness breakpoint (defaults to 768)\r\n      breakpoint: props.breakpoint,\r\n      // notifications array data\r\n      notifications: []\r\n    };\r\n\r\n    if (isNullOrUndefined(props.breakpoint)) {\r\n      // set default breakpoint\r\n      this.state.breakpoint = 768;\r\n    }\r\n\r\n    if (isNullOrUndefined(props.isMobile)) {\r\n      // option defaults to true\r\n      this.state.isMobile = true;\r\n    }\r\n\r\n    if (isArray(props.types)) {\r\n      // check for custom types\r\n      this.state.userDefinedTypes = props.types;\r\n    }\r\n\r\n    this.addNotification = this.addNotification.bind(this);\r\n    this.onNotificationClick = this.onNotificationClick.bind(this);\r\n    this.toggleRemoval = this.toggleRemoval.bind(this);\r\n    this.toggleTimeoutRemoval = this.toggleTimeoutRemoval.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n    this.renderReactNotifications = this.renderReactNotifications.bind(this);\r\n    this.toggleTouchEnd = this.toggleTouchEnd.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      width: window.innerWidth\r\n    }, () => {\r\n      // add listener for `resize` event\r\n      window.addEventListener(\"resize\", this.handleResize);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  handleResize() {\r\n    this.setState({\r\n      width: window.innerWidth,\r\n      notifications: this.state.notifications.map(notification => {\r\n        notification.resized = true;\r\n        return notification;\r\n      })\r\n    });\r\n  }\r\n\r\n  toggleTimeoutRemoval(notification) {\r\n    const { SLIDING_ANIMATION_EXIT } = NOTIFICATION_STAGE;\r\n    const { TIMEOUT } = REMOVAL;\r\n\r\n    this.setState({\r\n      notifications: this.state.notifications.map(item => {\r\n        if (item.id === notification.id) {\r\n          // set stage flag\r\n          item.stage = SLIDING_ANIMATION_EXIT;\r\n          // set removal flag\r\n          item.removedBy = TIMEOUT;\r\n        }\r\n\r\n        return item;\r\n      })\r\n    });\r\n  }\r\n\r\n  // API call\r\n  addNotification(object) {\r\n    const { notifications: data } = this.state;\r\n\r\n    // call will throw exception if object does not match rules\r\n    const notification = getNotificationOptions(\r\n      object,\r\n      // we need this to validate custom types if any\r\n      this.state.userDefinedTypes\r\n    );\r\n\r\n    this.setState({\r\n      notifications:\r\n        notification.insert === INSERTION.TOP\r\n          ? [notification, ...data]\r\n          : [...data, notification]\r\n    });\r\n\r\n    return notification.id;\r\n  }\r\n\r\n  // API call\r\n  removeNotification(id) {\r\n    this.setState({\r\n      notifications: this.state.notifications.map(item => {\r\n        if (item.id === id) {\r\n          // set stage flag\r\n          item.stage = NOTIFICATION_STAGE.MANUAL_REMOVAL;\r\n          // set removal flag\r\n          item.removedBy = REMOVAL.API;\r\n        }\r\n\r\n        return item;\r\n      })\r\n    }, () => {\r\n      requestAnimationFrame(() => {\r\n        this.setState({\r\n          notifications: this.state.notifications.map(item => {\r\n            if (item.id === id) {\r\n              // set stage flag\r\n              item.stage = NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT;\r\n              // set removal flag\r\n              item.removedBy = REMOVAL.API;\r\n            }\r\n\r\n            return item;\r\n          })\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  onNotificationClick(notification) {\r\n    const { dismissable, dismissIcon } = notification;\r\n    const dismissByClick = dismissable && dismissable.click;\r\n\r\n    if (dismissByClick || dismissIcon) {\r\n      requestAnimationFrame(() => {\r\n        this.setState({\r\n          notifications: this.state.notifications.map(item => {\r\n            if (item.id === notification.id) {\r\n              // set stage flag\r\n              item.stage = NOTIFICATION_STAGE.SLIDING_ANIMATION_EXIT;\r\n              // set removal flag\r\n              item.removedBy = REMOVAL.CLICK;\r\n            }\r\n\r\n            return item;\r\n          })\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  // called after a full swipe in order to remove notification from state\r\n  toggleTouchEnd(notification) {\r\n    const { TOUCH_SLIDING_ANIMATION_EXIT } = NOTIFICATION_STAGE;\r\n\r\n    this.setState({\r\n      notifications: this.state.notifications.map(item => {\r\n        if (item.id === notification.id) {\r\n          // set stage flag\r\n          item.stage = TOUCH_SLIDING_ANIMATION_EXIT;\r\n          // set removal flag\r\n          item.removedBy = REMOVAL.TOUCH;\r\n        }\r\n\r\n        return item;\r\n      })\r\n    });\r\n  }\r\n\r\n  toggleRemoval(notification) {\r\n    this.setState({\r\n      notifications: this.state.notifications.filter(item => item.id !== notification.id)\r\n    }, () => {\r\n      if (this.props.onNotificationRemoval) {\r\n        this.props.onNotificationRemoval(notification.id, notification.removedBy);\r\n      }\r\n    });\r\n  }\r\n\r\n  renderReactNotifications(notifications) {\r\n    return notifications.map(notification => <ReactNotification\r\n      key={notification.id}\r\n      notification={notification}\r\n      isFirstNotification={notifications.length === 1}\r\n      onClickHandler={this.onNotificationClick}\r\n      toggleRemoval={this.toggleRemoval}\r\n      toggleTimeoutRemoval={this.toggleTimeoutRemoval}\r\n      toggleTouchEnd={this.toggleTouchEnd}\r\n    />);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      state,\r\n      props\r\n    } = this;\r\n\r\n    if (props.isMobile && state.width <= state.breakpoint) {\r\n      const mobileNotifications = getNotificationsForMobileView(state.notifications);\r\n      const top = this.renderReactNotifications(mobileNotifications.top);\r\n      const bottom = this.renderReactNotifications(mobileNotifications.bottom);\r\n\r\n      return (\r\n        <div className=\"react-notification-root\">\r\n          <div className=\"notification-container-mobile-top\">\r\n            {top}\r\n          </div>\r\n          <div className=\"notification-container-mobile-bottom\">\r\n            {bottom}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const notificationsPerContainer = getNotificationsForEachContainer(state.notifications);\r\n    const topLeft = this.renderReactNotifications(notificationsPerContainer.topLeft);\r\n    const topRight = this.renderReactNotifications(notificationsPerContainer.topRight);\r\n    const topCenter = this.renderReactNotifications(notificationsPerContainer.topCenter);\r\n    const bottomLeft = this.renderReactNotifications(notificationsPerContainer.bottomLeft);\r\n    const bottomRight = this.renderReactNotifications(notificationsPerContainer.bottomRight);\r\n    const bottomCenter = this.renderReactNotifications(notificationsPerContainer.bottomCenter);\r\n\r\n    return (\r\n      <div className=\"react-notification-root\">\r\n        <div className=\"notification-container-top-left\">\r\n          {topLeft}\r\n        </div>\r\n        <div className=\"notification-container-top-right\">\r\n          {topRight}\r\n        </div>\r\n        <div className=\"notification-container-bottom-left\">\r\n          {bottomLeft}\r\n        </div>\r\n        <div className=\"notification-container-bottom-right\">\r\n          {bottomRight}\r\n        </div>\r\n        <div className=\"notification-container-top-center\">\r\n          {topCenter}\r\n        </div>\r\n        <div className=\"notification-container-bottom-center\">\r\n          {bottomCenter}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactNotificationComponent;\r\n"],"sourceRoot":""}