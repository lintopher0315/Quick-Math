{"ast":null,"code":"import _classCallCheck from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/christopher/Documents/launchpad/Quick-Math/src/components/Results.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nvar Results =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Results, _Component);\n\n  function Results(props) {\n    var _this;\n\n    _classCallCheck(this, Results);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Results).call(this, props));\n    _this.state = {\n      username: _this.props.location.state.username,\n      score: _this.props.location.state.score,\n      time: _this.props.location.state.seconds\n    };\n    return _this;\n  }\n\n  _createClass(Results, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      fetch('/users/practicestatistic', {\n        method: 'POST',\n        body: JSON.stringify({\n          usr: this.state.username,\n          score: this.state.score,\n          time: this.state.time\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json.success) {\n          console.log(\"statistic added\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: styles.grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Score: \", this.state.score, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), \"Time: \", this.state.time.toFixed(2)), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Home\")));\n    }\n  }]);\n\n  return Results;\n}(Component);\n\nvar styles = {\n  grid: {\n    fontSize: 35,\n    fontFamily: \"sans-serif\",\n    marginTop: 30,\n    marginBottom: 30\n  }\n};\nexport default Results;","map":{"version":3,"sources":["/home/christopher/Documents/launchpad/Quick-Math/src/components/Results.js"],"names":["React","Component","Button","Link","Results","props","state","username","location","score","time","seconds","fetch","method","body","JSON","stringify","usr","headers","then","res","json","success","console","log","styles","grid","toFixed","fontSize","fontFamily","marginTop","marginBottom"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,O;;;;;AAEF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWG,QAAX,CAAoBF,KAApB,CAA0BC,QAD3B;AAETE,MAAAA,KAAK,EAAE,MAAKJ,KAAL,CAAWG,QAAX,CAAoBF,KAApB,CAA0BG,KAFxB;AAGTC,MAAAA,IAAI,EAAE,MAAKL,KAAL,CAAWG,QAAX,CAAoBF,KAApB,CAA0BK;AAHvB,KAAb;AAHe;AAQlB;;;;wCAEmB;AAChBC,MAAAA,KAAK,CAAC,0BAAD,EAA6B;AAC9BC,QAAAA,MAAM,EAAE,MADsB;AAE9BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,GAAG,EAAE,KAAKX,KAAL,CAAWC,QADC;AAEjBE,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAFD;AAGjBC,UAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI;AAHA,SAAf,CAFwB;AAO9BQ,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAPqB,OAA7B,CAAL,CAWCC,IAXD,CAWM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAXT,EAYCF,IAZD,CAYM,UAAAE,IAAI,EAAI;AACV,YAAIA,IAAI,CAACC,OAAT,EAAkB;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH;AACJ,OAhBD;AAiBH;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAEC,MAAM,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,KAAKpB,KAAL,CAAWG,KADvB,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,YAGW,KAAKH,KAAL,CAAWI,IAAX,CAAgBiB,OAAhB,CAAwB,CAAxB,CAHX,CADJ,EAMI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CANJ,CADJ;AAcH;;;;EA/CiB1B,S;;AAkDtB,IAAIwB,MAAM,GAAG;AACTC,EAAAA,IAAI,EAAE;AACFE,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,UAAU,EAAE,YAFV;AAGFC,IAAAA,SAAS,EAAE,EAHT;AAIFC,IAAAA,YAAY,EAAE;AAJZ;AADG,CAAb;AASA,eAAe3B,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass Results extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: this.props.location.state.username,\n            score: this.props.location.state.score,\n            time: this.props.location.state.seconds,\n        }\n    }\n\n    componentDidMount() {\n        fetch('/users/practicestatistic', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n                score: this.state.score,\n                time: this.state.time,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success) {\n                console.log(\"statistic added\");\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"results\">\n                <p style={styles.grid}>\n                    Score: {this.state.score}\n                    <br />\n                    Time: {this.state.time.toFixed(2)}\n                </p>\n                <Link to='/'>\n                    <Button bsStyle=\"primary\">\n                        Home\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    grid: {\n        fontSize: 35,\n        fontFamily: \"sans-serif\",\n        marginTop: 30,\n        marginBottom: 30,\n    },\n}\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}