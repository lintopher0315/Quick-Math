{"ast":null,"code":"import _classCallCheck from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/christopher/Documents/launchpad/Quick-Math/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/christopher/Documents/launchpad/Quick-Math/src/components/QuizPage.js\";\nimport React, { Component } from 'react';\nimport Question from './Question';\nimport AnsButton from './AnsButton';\nimport { Grid, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nvar QuizPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QuizPage, _Component);\n\n  function QuizPage(props) {\n    var _this;\n\n    _classCallCheck(this, QuizPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(QuizPage).call(this, props));\n    _this.handler = _this.handler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      username: _this.props.location.state.username,\n      opponent: '',\n      order: _this.props.location.state.order,\n      round: 1,\n      question: '',\n      answer: '',\n      b1: '',\n      b2: '',\n      b3: '',\n      b4: '',\n      score: 0,\n      opponentScore: 0,\n      opponentQuestion: 1,\n      seconds: 0\n    };\n    return _this;\n  }\n\n  _createClass(QuizPage, [{\n    key: \"handler\",\n    value: function handler(u, a) {\n      var _this2 = this;\n\n      if (a === this.state.answer) {\n        this.setState({\n          score: this.state.score + 5\n        }, function () {\n          fetch('/users/updatescore', {\n            method: 'POST',\n            body: JSON.stringify({\n              usr: _this2.state.username,\n              order: _this2.state.order,\n              score: _this2.state.score\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          }).then(function (res) {\n            return res.json();\n          }).then(function (json) {\n            if (json.success) {\n              console.log(\"score updated\");\n            }\n          });\n        });\n      }\n\n      this.setState({\n        round: u\n      }, function () {\n        fetch('/users/incrementround', {\n          method: 'POST',\n          body: JSON.stringify({\n            usr: _this2.state.username,\n            order: _this2.state.order,\n            round: _this2.state.round\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            console.log(\"round updated\");\n          }\n        });\n      });\n      fetch('/users/question').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var q = json.question;\n        var a = json.answer;\n\n        _this2.setState({\n          question: q,\n          answer: a\n        });\n\n        _this2.randomAssign(_this2.state.answer);\n      });\n    }\n  }, {\n    key: \"randomExclude\",\n    value: function randomExclude(ans) {\n      var n1 = Math.floor(Math.random() * 50);\n\n      if (n1 >= ans) {\n        n1++;\n      }\n\n      return n1;\n    }\n  }, {\n    key: \"randomAssign\",\n    value: function randomAssign(ans) {\n      var random = Math.floor(Math.random() * 4);\n\n      switch (random) {\n        case 0:\n          this.setState({\n            b1: ans,\n            b2: this.randomExclude(ans),\n            b3: this.randomExclude(ans),\n            b4: this.randomExclude(ans)\n          });\n          break;\n\n        case 1:\n          this.setState({\n            b1: this.randomExclude(ans),\n            b2: ans,\n            b3: this.randomExclude(ans),\n            b4: this.randomExclude(ans)\n          });\n          break;\n\n        case 2:\n          this.setState({\n            b1: this.randomExclude(ans),\n            b2: this.randomExclude(ans),\n            b3: ans,\n            b4: this.randomExclude(ans)\n          });\n          break;\n\n        case 3:\n          this.setState({\n            b1: this.randomExclude(ans),\n            b2: this.randomExclude(ans),\n            b3: this.randomExclude(ans),\n            b4: ans\n          });\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      var _this3 = this;\n\n      this.setState(function (prevState) {\n        return {\n          seconds: prevState.seconds + 1\n        };\n      });\n      fetch('/users/opponentscore', {\n        method: 'POST',\n        body: JSON.stringify({\n          usr: this.state.username,\n          order: this.state.order\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var s = \"\";\n        var r = \"\";\n\n        if (_this3.state.order === \"first\") {\n          var s = json[0].score2;\n          var r = json[0].question2;\n        } else if (_this3.state.order === \"second\") {\n          var s = json[0].score1;\n          var r = json[0].question1;\n        }\n\n        _this3.setState({\n          opponentScore: s,\n          opponentQuestion: r\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.interval = setInterval(function () {\n        return _this4.tick();\n      }, 1000);\n      fetch('/users/getopponent', {\n        method: 'POST',\n        body: JSON.stringify({\n          usr: this.state.username,\n          order: this.state.order\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var q = \"\";\n\n        if (_this4.state.order === \"first\") {\n          var q = json[0].username2;\n        } else if (_this4.state.order === \"second\") {\n          var q = json[0].username1;\n        }\n\n        _this4.setState({\n          opponent: q\n        });\n      });\n      fetch('/users/question').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var q = json.question;\n        var a = json.answer;\n\n        _this4.setState({\n          question: q,\n          answer: a\n        });\n\n        _this4.randomAssign(_this4.state.answer);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.round === 11 && this.state.opponentQuestion >= 11) {\n        return React.createElement(Redirect, {\n          to: {\n            pathname: '/quizresults',\n            state: {\n              username: this.state.username,\n              opponent: this.state.opponent,\n              score: this.state.score,\n              opponentScore: this.state.opponentScore,\n              seconds: this.state.seconds\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        });\n      } else if (this.state.round === 11) {\n        return React.createElement(\"div\", {\n          className: \"done\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, \"\\\"Waiting for opponent to finish\\\"\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        style: {\n          background: '#e5e8e8'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Question, {\n        ques: this.state.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), this.state.round, \"\\\"|\\\"\", this.state.opponent, \"\\\"|\\\"\", this.state.opponentScore, \"\\\"|\\\"\", this.state.opponentQuestion, React.createElement(Grid, {\n        className: \"questions\",\n        style: styles.grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        md: 6,\n        style: styles.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(AnsButton, {\n        handler: this.handler,\n        round: this.state.round,\n        answer: this.state.b1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 12,\n        md: 6,\n        style: styles.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(AnsButton, {\n        handler: this.handler,\n        round: this.state.round,\n        answer: this.state.b2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        style: styles.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(AnsButton, {\n        handler: this.handler,\n        round: this.state.round,\n        answer: this.state.b3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 6,\n        md: 6,\n        style: styles.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(AnsButton, {\n        handler: this.handler,\n        round: this.state.round,\n        answer: this.state.b4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return QuizPage;\n}(Component);\n\nvar styles = {\n  grid: {\n    fontSize: 35,\n    fontFamily: \"sans-serif\",\n    marginTop: 30,\n    marginBottom: 30\n  },\n  question: {}\n};\nexport default QuizPage;","map":{"version":3,"sources":["/home/christopher/Documents/launchpad/Quick-Math/src/components/QuizPage.js"],"names":["React","Component","Question","AnsButton","Grid","Col","Redirect","QuizPage","props","handler","bind","state","username","location","opponent","order","round","question","answer","b1","b2","b3","b4","score","opponentScore","opponentQuestion","seconds","u","a","setState","fetch","method","body","JSON","stringify","usr","headers","then","res","json","success","console","log","q","randomAssign","ans","n1","Math","floor","random","randomExclude","prevState","s","r","score2","question2","score1","question1","clearInterval","interval","setInterval","tick","username2","username1","pathname","background","styles","grid","fontSize","fontFamily","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Question from './Question';\nimport AnsButton from './AnsButton';\nimport { Grid, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nclass QuizPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handler = this.handler.bind(this);\n\n        this.state = {\n            username: this.props.location.state.username,\n            opponent: '',\n            order: this.props.location.state.order,\n            round: 1,\n            question: '',\n            answer: '',\n            b1: '',\n            b2: '',\n            b3: '',\n            b4: '',\n            score: 0,\n            opponentScore: 0,\n            opponentQuestion: 1,\n            seconds: 0\n        }\n    }\n\n    handler(u, a) {\n        if (a === this.state.answer) {\n            this.setState({\n                score: this.state.score + 5,\n            }, () => {\n                fetch('/users/updatescore', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        usr: this.state.username,\n                        order: this.state.order,\n                        score: this.state.score,\n                    }),\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                })\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        console.log(\"score updated\");\n                    }\n                })\n            })\n        }\n        this.setState({\n            round: u,\n        }, () => {\n            fetch('/users/incrementround', {\n                method: 'POST',\n                body: JSON.stringify({\n                    usr: this.state.username,\n                    order: this.state.order,\n                    round: this.state.round,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n            .then(res => res.json())\n            .then(json => {\n                if (json.success) {\n                    console.log(\"round updated\");\n                }\n            })\n        })\n        fetch('/users/question')\n        .then(res => res.json())\n        .then(json => {\n            var q = json.question;\n            var a = json.answer;\n            this.setState({ question: q, answer: a});\n            this.randomAssign(this.state.answer);\n        })\n    }\n\n    randomExclude(ans) {\n        var n1 = Math.floor(Math.random() * 50);\n        if (n1 >= ans) {\n            n1++;\n        }\n        return n1;\n    }\n\n    randomAssign(ans) {\n        var random = Math.floor(Math.random() * 4);\n        switch(random) {\n            case 0:\n                this.setState({\n                    b1: ans,\n                    b2: this.randomExclude(ans),\n                    b3: this.randomExclude(ans),\n                    b4: this.randomExclude(ans)\n                });\n                break;\n            case 1:\n                this.setState({\n                    b1: this.randomExclude(ans),\n                    b2: ans,\n                    b3: this.randomExclude(ans),\n                    b4: this.randomExclude(ans)\n                });\n                break;\n            case 2:\n                this.setState({\n                    b1: this.randomExclude(ans),\n                    b2: this.randomExclude(ans),\n                    b3: ans,\n                    b4: this.randomExclude(ans)\n                });\n                break;\n            case 3:\n                this.setState({\n                    b1: this.randomExclude(ans),\n                    b2: this.randomExclude(ans),\n                    b3: this.randomExclude(ans),\n                    b4: ans\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    tick() {\n        this.setState(prevState => ({\n            seconds: prevState.seconds + 1\n        }));\n        fetch('/users/opponentscore', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n                order: this.state.order,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            var s = \"\";\n            var r = \"\";\n            if (this.state.order === \"first\") {\n                var s = json[0].score2;\n                var r = json[0].question2;\n            }\n            else if (this.state.order === \"second\") {\n                var s = json[0].score1;\n                var r = json[0].question1;\n            }\n            this.setState({ opponentScore: s, opponentQuestion: r });\n        })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 1000)\n        fetch('/users/getopponent', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n                order: this.state.order,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            var q = \"\";\n            if (this.state.order === \"first\") {\n                var q = json[0].username2;\n            }\n            else if (this.state.order === \"second\") {\n                var q = json[0].username1;\n            }\n            this.setState({ opponent: q });\n        })\n\n        fetch('/users/question')\n        .then(res => res.json())\n        .then(json => {\n            var q = json.question;\n            var a = json.answer;\n            this.setState({ question: q, answer: a});\n            this.randomAssign(this.state.answer);\n        })\n    }\n\n    render() {\n        if (this.state.round === 11 && this.state.opponentQuestion >= 11) {\n            return <Redirect to={{\n                pathname: '/quizresults',\n                state: {\n                    username: this.state.username,\n                    opponent: this.state.opponent,\n                    score: this.state.score,\n                    opponentScore: this.state.opponentScore,\n                    seconds: this.state.seconds,\n                }\n            }}/>;\n        }\n        else if (this.state.round === 11) {\n            return (\n                <div className=\"done\">\n                    \"Waiting for opponent to finish\"\n                </div>\n            );\n        }\n        return (\n            <div className=\"App\" style = {{background: '#e5e8e8'}}>\n                <Question ques={this.state.question}/>{this.state.round}\"|\"{this.state.opponent}\"|\"{this.state.opponentScore}\"|\"{this.state.opponentQuestion}\n\n                <Grid className=\"questions\" style = {styles.grid}>\n                    <Col xs={12} md={6} style = {styles.question}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b1}/>\n                    </Col>\n\n                    <Col xs={12} md={6} style = {styles.question}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b2}/>\n                    </Col>\n\n                    <Col xs={6} md={6} style = {styles.question}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b3}/>\n                    </Col>\n\n                    <Col xs={6} md={6} style = {styles.question}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b4}/>\n                    </Col>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    grid: {\n        fontSize: 35,\n        fontFamily: \"sans-serif\",\n        marginTop: 30,\n        marginBottom: 30,\n    },\n\n    question: {\n\n    }\n}\n\nexport default QuizPage;\n"]},"metadata":{},"sourceType":"module"}