{"version":3,"sources":["components/LoginForm.js","components/Login.js","components/Question.js","components/AnsButton.js","components/QuizPage.js","components/SignUpForm.js","components/SignUp.js","components/Home.js","components/Practice.js","components/Results.js","components/Search.js","components/QuizResults.js","components/Profile.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["LoginForm","state","redirect","_this2","this","fetch","method","body","JSON","stringify","usr","textInput","value","pass","textInput2","headers","Content-Type","then","res","json","success","temp","setState","props","handler","catch","console","log","_this3","react_default","a","createElement","Redirect","to","Form","horizontal","FormGroup","controlId","Col","componentClass","ControlLabel","sm","style","styles","div","FormControl","type","placeholder","inputRef","input","smOffset","Button","bsStyle","onClick","sendUser","bind","Component","fontFamily","fontSize","marginTop","color","Login","className","text","components_LoginForm","fontFamly","background","Question","round","ques","paddingBottom","AnsButton","_this","marginBottom","bsSize","block","answer","QuizPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","username","location","opponent","order","question","b1","b2","b3","b4","score","opponentScore","opponentQuestion","seconds","opponentSeconds","running","opponentRunning","u","q","randomAssign","ans","n1","Math","floor","random","Number","randomExclude","prevState","s","r","score2","question2","score1","question1","clearInterval","interval","_this4","setInterval","tick","username2","username1","pathname","grid","components_Question","Grid","xs","md","components_AnsButton","time","SignUpForm","id","SignUp","components_SignUpForm","Home","user","title","fluid","paddingTop","Link","source","href","Practice","totSeconds","parseFloat","toFixed","result","Results","Search","found","exitWaiting","QuizResults","done","Profile","practiceScoreData","labels","datasets","data","label","borderColor","fill","playScoreData","practiceTimeData","playTimeData","assign","i","length","push","date","substring","es","options","maintainAspectRatio","display","scales","xAxes","scaleLabel","labelString","yAxes","Header","auth","textAlign","marginRight","button","marginLeft","Switch","Route","exact","path","component","components_Home","components_Login","components_Practice","components_Search","components_Profile","name","App","components_Header","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44bc6c98.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, FormGroup, ControlLabel, FormControl, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nclass LoginForm extends Component {\n\n    state = {\n        redirect: false\n    }\n\n    sendUser() {\n        fetch('/users/check', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.textInput.value,\n                pass: this.textInput2.value\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success){\n                let temp = this.textInput.value;\n                this.setState({ redirect: true });\n                this.props.handler(temp, true);\n            }\n        })\n        .catch( () =>{\n            console.log(\"ERR\");\n        })\n    }\n\n    render() {\n        const { redirect } = this.state;\n        if (redirect) {\n            return <Redirect to='/'/>;\n        }\n        return (\n            <Form horizontal>\n                <FormGroup controlId=\"username\">\n                    <Col componentClass={ControlLabel} sm={2} style={styles.div}>\n                        Username:\n                    </Col>\n                    <Col sm={9}>\n                        <FormControl type=\"username\" placeholder=\"Username\" inputRef={input => this.textInput = input}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup controlId=\"password\">\n                    <Col componentClass={ControlLabel} sm={2} style={styles.div}>\n                        Password:\n                    </Col>\n                    <Col sm={9}>\n                        <FormControl type=\"password\" placeholder=\"Password\" inputRef={input => this.textInput2 = input}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup>\n                    <Col smOffset={1} sm={10}>\n                        <Button bsStyle=\"default\" onClick={this.sendUser.bind(this)}>Submit</Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        );\n    }\n}\n\nlet styles = {\n    div: {\n        fontFamily: \"Roboto Mono\",\n        fontSize: 25,\n        marginTop: -10,\n        color: '#2980b9',\n    }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport LoginForm from './LoginForm';\n\nclass Login extends Component {\n    render() {\n        return (\n            <div className=\"login-title\" style = {styles.div}>\n                <p style = {styles.text}>Login</p>\n                <LoginForm handler={this.props.handler}/>\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    div: {\n        fontFamly: \"Roboto Mono\",\n        fontSize: 40,\n        marginTop: 40,\n        background: '#f4f6f6',\n    },\n\n    text: {\n        color: '#2980b9',\n    }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nclass Question extends Component {\n    render() {\n        return (\n            <div className=\"question\" style = {styles.div}>\n                <p style = {styles.text}>Question {this.props.round}</p>\n                {this.props.ques}\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    div: {\n        fontFamily: \"Roboto Mono\",\n        fontSize: 45,\n        marginTop: 40,\n        paddingBottom: 20,\n        background: '#f4f6f6',\n    },\n\n    text: {\n        color: '#2980b9',\n    }\n}\n\nexport default Question;\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass AnsButton extends Component {\n    render() {\n        return (\n            <div className=\"ansbutton\" style={{marginBottom: 30}}>\n                <Button bsStyle=\"info\" bsSize=\"large\" style={{fontFamily: \"Roboto Mono\"}} block onClick={() => this.props.handler(this.props.round + 1, this.props.answer)}>{this.props.answer}</Button>\n            </div>\n        );\n    }\n}\n\nexport default AnsButton;\n","import React, { Component } from 'react';\nimport Question from './Question';\nimport AnsButton from './AnsButton';\nimport { Grid, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nclass QuizPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handler = this.handler.bind(this);\n\n        this.state = {\n            username: this.props.location.state.username,\n            opponent: '',\n            order: this.props.location.state.order,\n            round: 1,\n            question: '',\n            answer: '',\n            b1: '',\n            b2: '',\n            b3: '',\n            b4: '',\n            score: 0,\n            opponentScore: 0,\n            opponentQuestion: 1,\n            seconds: 0,\n            opponentSeconds: 0,\n            running: true,\n            opponentRunning: true\n        }\n    }\n\n    handler(u, a) {\n        if (a === this.state.answer) {\n            this.setState({\n                score: this.state.score + 5,\n            }, () => {\n                fetch('/users/updatescore', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        usr: this.state.username,\n                        order: this.state.order,\n                        score: this.state.score,\n                    }),\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                })\n                .then(res => res.json())\n                .then(json => {\n                    if (json.success) {\n                        console.log(\"score updated\");\n                    }\n                })\n            })\n        }\n        this.setState({\n            round: u,\n        }, () => {\n            fetch('/users/incrementround', {\n                method: 'POST',\n                body: JSON.stringify({\n                    usr: this.state.username,\n                    order: this.state.order,\n                    round: this.state.round,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n            .then(res => res.json())\n            .then(json => {\n                if (json.success) {\n                    console.log(\"round updated\");\n                }\n            })\n        })\n        if (this.state.round < 10) {\n            fetch('/users/question')\n            .then(res => res.json())\n            .then(json => {\n                var q = json.question;\n                var a = json.answer;\n                this.setState({ question: q, answer: a});\n                this.randomAssign(this.state.answer);\n            })\n        }\n    }\n\n    randomExclude(ans) {\n        var n1 = Math.floor(Math.random() * 30 + 1);\n        if (Math.random() > 0.5) {\n            return Number(ans) - n1;\n        }\n        else {\n            return Number(ans) + n1;\n        }\n    }\n\n    randomAssign(ans) {\n        var random = Math.floor(Math.random() * 4);\n        switch(random) {\n            case 0:\n                this.setState({\n                    b1: ans,\n                    b2: this.randomExclude(ans),\n                    b3: this.randomExclude(ans),\n                    b4: this.randomExclude(ans)\n                });\n                break;\n            case 1:\n                this.setState({\n                    b1: this.randomExclude(ans),\n                    b2: ans,\n                    b3: this.randomExclude(ans),\n                    b4: this.randomExclude(ans)\n                });\n                break;\n            case 2:\n                this.setState({\n                    b1: this.randomExclude(ans),\n                    b2: this.randomExclude(ans),\n                    b3: ans,\n                    b4: this.randomExclude(ans)\n                });\n                break;\n            case 3:\n                this.setState({\n                    b1: this.randomExclude(ans),\n                    b2: this.randomExclude(ans),\n                    b3: this.randomExclude(ans),\n                    b4: ans\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    tick() {\n        if (this.state.round === 11) {\n            this.setState({running: false});\n        }\n        if (this.state.opponentQuestion === 11) {\n            this.setState({opponentRunning: false});\n        }\n        if (this.state.opponentRunning) {\n            this.setState(prevState => ({\n                opponentSeconds: prevState.opponentSeconds + 1\n            }));\n        }\n        if (this.state.running) {\n            this.setState(prevState => ({\n                seconds: prevState.seconds + 1\n            }));\n        }\n        fetch('/users/opponentscore', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n                order: this.state.order,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            var s = \"\";\n            var r = \"\";\n            if (this.state.order === \"first\") {\n                s = json[0].score2;\n                r = json[0].question2;\n            }\n            else if (this.state.order === \"second\") {\n                s = json[0].score1;\n                r = json[0].question1;\n            }\n            this.setState({ opponentScore: s, opponentQuestion: r });\n        })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 1000)\n        fetch('/users/getopponent', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n                order: this.state.order,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            var q = \"\";\n            if (this.state.order === \"first\") {\n                q = json[0].username2;\n            }\n            else if (this.state.order === \"second\") {\n                q = json[0].username1;\n            }\n            this.setState({ opponent: q });\n        })\n\n        fetch('/users/question')\n        .then(res => res.json())\n        .then(json => {\n            var q = json.question;\n            var a = json.answer;\n            this.setState({ question: q, answer: a});\n            this.randomAssign(this.state.answer);\n        })\n    }\n\n    render() {\n        if (this.state.round === 11 && this.state.opponentQuestion >= 11) {\n            return <Redirect to={{\n                pathname: '/quizresults',\n                state: {\n                    username: this.state.username,\n                    opponent: this.state.opponent,\n                    score: this.state.score,\n                    opponentScore: this.state.opponentScore,\n                    seconds: this.state.seconds,\n                    order: this.state.order,\n                    opponentSeconds: this.state.opponentSeconds,\n                }\n            }}/>;\n        }\n        else if (this.state.round === 11) {\n            return (\n                <div className=\"done\" style={styles.grid}>\n                    <p>Waiting for opponent to finish.</p>\n                </div>\n            );\n        }\n        return (\n            <div className=\"App\" style = {{background: '#e5e8e8'}}>\n                <Question ques={this.state.question} round={this.state.round}/>\n\n                <Grid className=\"questions\" style = {styles.grid}>\n                    <Col xs={12} md={6}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b1}/>\n                    </Col>\n\n                    <Col xs={12} md={6}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b2}/>\n                    </Col>\n\n                    <Col xs={6} md={6}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b3}/>\n                    </Col>\n\n                    <Col xs={6} md={6}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b4}/>\n                    </Col>\n                </Grid>\n                <Grid className=\"score\" style={styles.grid}>\n                    <Col xs={12} md={6}>\n                        <p style={styles.grid}>\n                            {this.state.username}: {this.state.score}\n                        </p>\n                    </Col>\n                    <Col xs={12} md={6}>\n                        <p style={styles.grid}>\n                            {this.state.opponent}: {this.state.opponentScore}\n                        </p>\n                    </Col>\n                </Grid>\n                <p style={styles.time}>\n                    {this.state.seconds}\n                </p>\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    grid: {\n        fontSize: 35,\n        fontFamily: \"Roboto Mono\",\n        marginTop: 30,\n        marginBottom: 30,\n    },\n\n    time: {\n        fontSize: 45,\n        fontFamily: \"Roboto Mono\",\n        paddingBottom: 30,\n    }\n}\n\nexport default QuizPage;\n","import React, { Component } from 'react';\nimport { Button, Form, FormGroup, ControlLabel, FormControl, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nclass SignUpForm extends Component {\n\n    state = {\n        redirect: false\n    }\n\n    sendUser() {\n        fetch('/users', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.textInput.value,\n                pass: this.textInput2.value\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success) {\n                this.setState({ redirect: true});\n            }\n        })\n        .catch( () => {\n            console.log(\"signup error\");\n        })\n    }\n\n    render() {\n        const { redirect } = this.state;\n        if (redirect) {\n            return <Redirect to='/login'/>;\n        }\n        return (\n            <Form horizontal componentClass=\"form\">\n                <FormGroup controlId=\"username\" componentClass=\"u\">\n                    <Col componentClass={ControlLabel} sm={2} style={styles.div}>\n                        Username:\n                    </Col>\n                    <Col sm={9}>\n                        <FormControl type=\"username\" placeholder=\"Username\" inputRef={input => this.textInput = input}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup controlId=\"password\" componentClass=\"p\">\n                    <Col componentClass={ControlLabel} sm={2} style={styles.div}>\n                        Password:\n                    </Col>\n                    <Col sm={9}>\n                        <FormControl type=\"password\" placeholder=\"Password\" inputRef={input => this.textInput2 = input}/>\n                    </Col>\n                </FormGroup>\n\n                <FormGroup>\n                    <Col smOffset={1} sm={10}>\n                        <Button bsStyle=\"default\" onClick={this.sendUser.bind(this)} id=\"sub\">Sign Up</Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        );\n    }\n}\n\nlet styles = {\n    div: {\n        fontFamily: \"Roboto Mono\",\n        fontSize: 25,\n        marginTop: -10,\n        color: '#2980b9',\n    }\n}\n\nexport default SignUpForm;\n","import React, { Component } from 'react';\nimport SignUpForm from './SignUpForm';\n\nclass SignUp extends Component {\n    render() {\n        return (\n            <div className=\"signup-title\" style = {styles.div}>\n                <p style = {styles.text}>Sign Up</p>\n                <SignUpForm/>\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    div: {\n        fontFamly: \"sans-serif\",\n        fontSize: 40,\n        marginTop: 40,\n        background: '#f4f6f6',\n    },\n\n    text: {\n        color: '#2980b9',\n    }\n}\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport { Grid, Col, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: this.props.user,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"home\">\n                {this.state.username !== \"\" ? (\n                    <div className=\"show\">\n                        <div className=\"start\" style={styles.title}>\n                            Get Started\n                            <br />\n                        </div>\n                        <div className=\"button\" style={styles.text}>\n                            <Grid className=\"select\" fluid={true}>\n                                <Col xs={12} md={6}>\n                                    <p style={{paddingTop: 30}}>\n                                        Compete against players online to complete a set of <br />math problems before they finish.\n                                    </p>\n                                    <Link to='/search'>\n                                        <Button bsStyle=\"primary\">\n                                            Start\n                                        </Button>\n                                    </Link>\n                                </Col>\n                                <Col xs={12} md={6}>\n                                    <p style={{paddingTop: 30}}>\n                                        Practice a set of problems on your own to enhance <br />your speed and improve your stats.\n                                    </p>\n                                    <Link to='/practice'>\n                                        <Button bsStyle=\"primary\">\n                                            Practice\n                                        </Button>\n                                    </Link>\n                                </Col>\n                            </Grid>\n                            <p style={{paddingTop: 350}}>\n                                Take a look at your recent stats by clicking on the username button.\n                            </p>\n                        </div>\n                    </div>\n                ): (\n                    <div>\n                        <div className=\"title\" style={styles.title}>\n                            About\n                            <br />\n\n                        </div>\n                        <div className=\"text\" style={styles.text}>\n                            <p>\n                                Quick Math is a speed math website where users can challenge each other online to see who can solve arithmetic problems the fastest.\n                            </p>\n                            <br />\n                            <p>\n                                You can begin by signing up and logging in.\n                            </p>\n                            <br />\n                            <br />\n                            <br />\n                            <br />\n                            <p style={styles.source}>\n                                github:\n                            </p>\n                             <a href=\"https://github.com/lintopher0315/Quick-Math\">https://github.com/lintopher0315/Quick-Math</a>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    title: {\n        fontSize: 35,\n        fontFamily: \"Roboto Mono\",\n        paddingTop: 20,\n        paddingBottom: 20,\n    },\n    text: {\n        fontSize: 20,\n        fontFamily: \"Roboto Mono\",\n        background: \"#fdfefe\",\n        paddingTop: 30,\n    },\n    source: {\n        fontSize: 15,\n        fontFamily: \"Roboto Mono\",\n        background: \"#fdfefe\",\n        color: '#b20e89',\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Question from './Question';\nimport AnsButton from './AnsButton';\nimport { Grid, Col } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nclass Practice extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handler = this.handler.bind(this);\n\n        this.state = {\n            username: this.props.user,\n            round: 1,\n            question: '',\n            answer: '',\n            b1: '',\n            b2: '',\n            b3: '',\n            b4: '',\n            score: 0,\n            seconds: 0,\n            totSeconds: 0,\n        }\n    }\n\n    tick() {\n        this.setState(prevState => ({\n            seconds: parseFloat((prevState.seconds + 0.1).toFixed(2))\n        }));\n    }\n\n    handler(u, a) {\n        this.setState({ totSeconds: this.state.totSeconds + this.state.seconds });\n        this.setState({ seconds: 0 });\n        if (a === this.state.answer) {\n            this.setState({\n                score: this.state.score + 5,\n            });\n        }\n        this.setState({\n            round: u,\n        });\n        if (this.state.round < 10) {\n            fetch('/users/question')\n            .then(res => res.json())\n            .then(json => {\n                console.log(json);\n                var q = json.question;\n                var a = json.answer;\n                this.setState({ question: q, answer: a});\n                this.randomAssign(this.state.answer);\n            })\n        }\n    }\n\n    randomExclude(ans) {\n        var n1 = Math.floor(Math.random() * 30 - 15);\n        if (Number(ans) + n1 < 0) {\n            n1 = Math.floor(Math.random() * 30 - 15);\n        }\n        if (n1 >= 0) {\n            n1++;\n        }\n        return Number(ans) + n1;\n    }\n\n    randomAssign(ans) {\n        var random = Math.floor(Math.random() * 4);\n        switch(random) {\n            case 0:\n                this.setState({\n                    b1: ans,\n                    b2: this.randomExclude(ans),\n                    b3: this.randomExclude(ans),\n                    b4: this.randomExclude(ans)\n                });\n                break;\n            case 1:\n                this.setState({\n                    b1: this.randomExclude(ans),\n                    b2: ans,\n                    b3: this.randomExclude(ans),\n                    b4: this.randomExclude(ans)\n                });\n                break;\n            case 2:\n                this.setState({\n                    b1: this.randomExclude(ans),\n                    b2: this.randomExclude(ans),\n                    b3: ans,\n                    b4: this.randomExclude(ans)\n                });\n                break;\n            case 3:\n                this.setState({\n                    b1: this.randomExclude(ans),\n                    b2: this.randomExclude(ans),\n                    b3: this.randomExclude(ans),\n                    b4: ans\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 100)\n        fetch('/users/question')\n        .then(res => res.json())\n        .then(json => {\n            console.log(json);\n            var q = json.question;\n            var a = json.answer;\n            this.setState({ question: q, answer: a});\n            this.randomAssign(this.state.answer);\n        })\n    }\n\n    render() {\n        var redirect = this.state.round;\n        if (redirect === 11) {\n            return <Redirect to={{\n                    pathname: '/results',\n                    state: { username: this.state.username, score: this.state.score, seconds: this.state.totSeconds }\n                }}/>;\n        }\n        return (\n            <div className=\"App\" style = {{background: '#e5e8e8'}}>\n                <Question ques={this.state.question} round={this.state.round}/>\n\n                <Grid className=\"questions\" style = {styles.grid}>\n                    <Col xs={12} md={6}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b1}/>\n                    </Col>\n\n                    <Col xs={12} md={6}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b2}/>\n                    </Col>\n\n                    <Col xs={6} md={6}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b3}/>\n                    </Col>\n\n                    <Col xs={6} md={6}>\n                        <AnsButton handler={this.handler} round={this.state.round} answer={this.state.b4}/>\n                    </Col>\n                </Grid>\n                <br />\n                <br />\n                <Grid className=\"time\">\n                    <Col xs={12} md={6}>\n                        <p style={styles.result}>\n                            {(this.state.totSeconds).toFixed(2)}\n                        </p>\n                    </Col>\n\n                    <Col xs={12} md={6}>\n                        <p style={styles.result}>\n                            {(this.state.seconds).toFixed(2)}\n                        </p>\n                    </Col>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    grid: {\n        fontSize: 35,\n        fontFamily: \"Roboto Mono\",\n        marginTop: 30,\n        marginBottom: 30,\n    },\n\n    result: {\n        fontSize: 45,\n        fontFamily: \"Roboto Mono\",\n        paddingBottom: 30,\n    }\n}\n\nexport default Practice;\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass Results extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: this.props.location.state.username,\n            score: this.props.location.state.score,\n            time: this.props.location.state.seconds,\n        }\n    }\n\n    componentDidMount() {\n        fetch('/users/practicestatistic', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n                score: this.state.score,\n                time: this.state.time,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success) {\n                console.log(\"statistic added\");\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"results\">\n                <p style={styles.grid}>\n                    Score: {this.state.score}\n                    <br />\n                    Time: {this.state.time.toFixed(2)}\n                </p>\n                <Link to='/'>\n                    <Button bsStyle=\"primary\">\n                        Home\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    grid: {\n        fontSize: 35,\n        fontFamily: \"sans-serif\",\n        marginTop: 30,\n        marginBottom: 30,\n    },\n}\n\nexport default Results;\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass Search extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: this.props.user,\n            found: \"\",\n            seconds: 0,\n        };\n    }\n\n    tick() {\n        this.setState(prevState => ({\n            seconds: prevState.seconds + 1\n        }));\n    }\n\n    exitWaiting() {\n        fetch('/users/stopwaiting', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success) {\n                console.log(\"exited waiting\");\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 1000)\n        fetch('/users/waiting', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success) {\n                if (json.order === \"first\") {\n                    this.setState({ found: \"first\" });\n                }\n                else if (json.order === \"second\") {\n                    this.setState({ found: \"second\" });\n                }\n                console.log(\"currently waiting\");\n            }\n        })\n    }\n\n    render() {\n        if (this.state.found === \"first\") {\n            fetch('/users/ingame', {\n                method: 'POST',\n                body: JSON.stringify({\n                    usr: this.state.username,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n            .then(res => res.json())\n            .then(json => {\n                console.log(\"asdf\");\n                if (json.success) {\n                    console.log(\"1234\");\n                    this.setState({ found: \"firstFin\"});\n                }\n            })\n        }\n        else if (this.state.found === \"second\") {\n            return <Redirect to={{\n                pathname: '/quiz',\n                state: { username: this.state.username, order: \"second\" }\n            }}/>;\n        }\n        else if (this.state.found === \"firstFin\") {\n            return <Redirect to={{\n                pathname: '/quiz',\n                state: { username: this.state.username, order: \"first\" }\n            }}/>;\n        }\n        return (\n            <div className=\"search\">\n                Waiting\n                <Link to='/'>\n                    <Button onClick={this.exitWaiting.bind(this)}>\n                        Return to Home\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass QuizResults extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: this.props.location.state.username,\n            opponent: this.props.location.state.opponent,\n            score: this.props.location.state.score,\n            opponentScore: this.props.location.state.opponentScore,\n            time: this.props.location.state.seconds,\n            order: this.props.location.state.order,\n            seconds: 0,\n            opponentSeconds: this.props.location.state.opponentSeconds,\n            done: false,\n        }\n    }\n\n    tick() {\n        this.setState(prevState => ({\n            seconds: prevState.seconds + 1\n        }));\n\n        fetch('/users/userfinish', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n                opponent: this.state.opponent,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success) {\n                this.setState({ done: true });\n            }\n        })\n\n        if (this.state.done && this.state.order === \"first\") {\n            fetch('/users/removematch', {\n                method: 'POST',\n                body: JSON.stringify({\n                    usr: this.state.username,\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n            .then(res => res.json())\n            .then(json => {\n                if (json.success) {\n                    console.log(\"removed match\");\n                }\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 1000)\n        fetch('/users/exitmatch', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success) {\n                console.log(\"status: online\");\n            }\n        })\n        fetch('/users/playstatistic', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n                score: this.state.score,\n                time: this.state.time,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success) {\n                console.log(\"play statistic recorded\");\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"quizresults\">\n                <div className=\"content\" style={styles.grid}>\n\n                    Here are the results!\n                    <br />\n                    <br />\n                    {this.state.username}\n                    <br />\n                    Score: {this.state.score}\n                    <br />\n                    Time: {this.state.time}\n                    <br /><br />\n                    {this.state.opponent}\n                    <br />\n                    Score: {this.state.opponentScore}\n                    <br />\n                    Time: {this.state.opponentSeconds}\n                    <br />\n\n                </div>\n                <Link to='/'>\n                    <Button bsStyle=\"primary\" style = {{marginBottom: 20}}>\n                        Home\n                    </Button>\n                </Link>\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    grid: {\n        fontSize: 35,\n        fontFamily: \"Roboto Mono\",\n        marginTop: 30,\n        marginBottom: 30,\n    },\n}\n\nexport default QuizResults;\n","import React, { Component } from 'react';\nimport { Grid, Col } from 'react-bootstrap';\nimport { Line } from 'react-chartjs-2';\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: this.props.user,\n            practiceScoreData: {\n                labels: [],\n                datasets: [{\n                    data: [],\n                    label: this.props.user,\n                    borderColor: \"#3e95cd\",\n                    fill: false,\n                },]\n            },\n            playScoreData: {\n                labels: [],\n                datasets: [{\n                    data: [],\n                    label: this.props.user,\n                    borderColor: \"#f442f1\",\n                    fill: false\n                },]\n            },\n            practiceTimeData: {\n                labels: [],\n                datasets: [{\n                    data: [],\n                    label: this.props.user,\n                    borderColor: \"#41f4bb\",\n                    fill: false\n                },]\n            },\n            playTimeData: {\n                labels: [],\n                datasets: [{\n                    data: [],\n                    label: this.props.user,\n                    borderColor: \"#f4c741\",\n                    fill: false\n                },]\n            },\n        };\n    }\n\n    componentDidMount() {\n        var practiceScoreData = [];\n        var practiceTimeData = [];\n        fetch('/users/displaypractice', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            practiceScoreData = Object.assign({}, this.state.practiceScoreData);\n            for (var i = 0; i < json.length; i++) {\n                if (i === 10) {\n                    break;\n                }\n                practiceScoreData.datasets[0].data.push(json[i].score);\n                practiceScoreData.labels.push(json[i].date.substring(0, 10));\n            }\n\n            practiceTimeData = Object.assign({}, this.state.practiceTimeData);\n            for (i = 0; i < json.length; i++) {\n                if (i === 10) {\n                    break;\n                }\n                practiceTimeData.datasets[0].data.push(Math.round(json[i].time * 100) / 100);\n                practiceTimeData.labels.push(json[i].date.substring(0, 10));\n            }\n        })\n\n        fetch('/users/displayplay', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username,\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            let playScoreData = Object.assign({}, this.state.playScoreData);\n            for (var i = 0; i < json.length; i++) {\n                if (i === 10) {\n                    break;\n                }\n                playScoreData.datasets[0].data.push(json[i].score);\n                playScoreData.labels.push(json[i].date.substring(0, 10));\n            }\n\n            let playTimeData = Object.assign({}, this.state.playTimeData);\n            for (i = 0; i < json.length; i++) {\n                if (i === 10) {\n                    break;\n                }\n                playTimeData.datasets[0].data.push(Math.round(json[i].time * 100) / 100);\n                playTimeData.labels.push(json[i].date.substring(0, 10));\n            }\n            this.setState({practiceScoreData: practiceScoreData, practiceTimeData: practiceTimeData, playScoreData: playScoreData, playTimeData: playTimeData});\n        })\n    }\n\n    render() {\n        return (\n            <Grid className=\"stats\" style = {styles.grid}>\n                <Col xs={12} md={6}>\n                    Practice\n                    <div className=\"practiceScore\">\n                        <Line\n                            data={this.state.practiceScoreData}\n                            options={{\n                                maintainAspectRatio: true,\n                                title: {\n                                    display: true,\n                                    text: 'Score of Past 10 Matches',\n                                    fontFamily: 'Roboto Mono',\n                                },\n                                scales: {\n                                    xAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Last 10 Matches',\n                                            fontFamily: 'Roboto Mono',\n                                        }\n                                    }],\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Score',\n                                            fontFamily: 'Roboto Mono',\n                                        }\n                                    }]\n                                }\n                            }}\n                        />\n                    </div>\n                </Col>\n\n                <Col xs={12} md={6}>\n                    Play\n                    <div className=\"playScore\">\n                        <Line\n                            data={this.state.playScoreData}\n                            options={{\n                                maintainAspectRatio: true,\n                                title: {\n                                    display:true,\n                                    text: 'Score of Past 10 Matches',\n                                    fontFamily: 'Roboto Mono',\n                                },\n                                scales: {\n                                    xAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Last 10 Matches',\n                                            fontFamily: 'Roboto Mono',\n                                        }\n                                    }],\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Score',\n                                            fontFamily: 'Roboto Mono',\n                                        }\n                                    }]\n                                }\n                            }}\n                        />\n                    </div>\n                </Col>\n\n                <Col xs={8} md={6}>\n                    <br />\n                    <div className=\"practiceTime\">\n                        <Line\n                            data={this.state.practiceTimeData}\n                            options={{\n                                maintainAspectRatio: true,\n                                title: {\n                                    display:true,\n                                    text: 'Time of Past 10 Matches',\n                                    fontFamily: 'Roboto Mono',\n                                },\n                                scales: {\n                                    xAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Last 10 Matches',\n                                            fontFamily: 'Roboto Mono',\n                                        }\n                                    }],\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Time (seconds)',\n                                            fontFamily: 'Roboto Mono',\n                                        }\n                                    }]\n                                }\n                            }}\n                        />\n                    </div>\n                </Col>\n\n                <Col xs={8} md={6}>\n                    <br />\n                    <div className=\"playTime\">\n                        <Line\n                            data={this.state.playTimeData}\n                            options={{\n                                maintainAspectRatio: true,\n                                title: {\n                                    display:true,\n                                    text: 'Time of Past 10 Matches',\n                                    fontFamily: 'Roboto Mono',\n                                },\n                                scales: {\n                                    xAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Last 10 Matches',\n                                            fontFamily: 'Roboto Mono',\n                                        }\n                                    }],\n                                    yAxes: [{\n                                        scaleLabel: {\n                                            display: true,\n                                            labelString: 'Time (seconds)',\n                                            fontFamily: 'Roboto Mono',\n                                        }\n                                    }]\n                                }\n                            }}\n                        />\n                    </div>\n                </Col>\n            </Grid>\n        );\n    }\n}\n\nlet styles = {\n    grid: {\n        fontSize: 35,\n        fontFamily: \"Roboto Mono\",\n        marginTop: 30,\n        marginBottom: 30,\n    }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Link, Switch, Route } from 'react-router-dom';\nimport { Grid, Col, Button } from 'react-bootstrap';\nimport Login from './Login';\nimport QuizPage from './QuizPage';\nimport SignUp from './SignUp';\nimport Home from './Home';\nimport Practice from './Practice';\nimport Results from './Results';\nimport Search from './Search';\nimport QuizResults from './QuizResults';\nimport Profile from './Profile';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handler = this.handler.bind(this);\n\n        this.state = {\n            auth: false,\n            username: \"\"\n        };\n    }\n\n    handler(u, a) {\n        this.setState({\n            username: u,\n            auth: a\n        });\n    }\n\n    sendUser() {\n        fetch('/users/auth', {\n            method: 'POST',\n            body: JSON.stringify({\n                usr: this.state.username\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(res => res.json())\n        .then(json => {\n            if (json.success) {\n                this.setState({ auth: false, username: \"\" });\n            }\n        })\n        .catch( () => {\n            console.log(\"err\");\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"head\">\n                <Grid className=\"header\" fluid = {true} style = {styles.div}>\n\n                    <Col xs={12} md={4} style={{textAlign: 'left',}}>\n                        <div className=\"name\">\n                            {this.state.username !== \"\" ? (\n                                <div className=\"left\">\n                                    <Link to='/' style={{marginRight: 35}}>\n                                        <Button bsStyle=\"success\" style={{fontFamily: 'sans-serif', fontSize: 14,}}>\n                                            Home\n                                        </Button>\n                                    </Link>\n                                    <Link to='/profile'>\n                                        <Button bsStyle=\"default\" style={{fontFamily: 'Roboto Mono', fontSize: 25,}}>\n                                            {this.state.username}\n                                        </Button>\n                                    </Link>\n                                </div>\n                            ) : (\n                                <Link to='/' style={{marginRight: 35}}>\n                                    <Button bsStyle=\"success\" style={{fontFamily: 'sans-serif', fontSize: 14,}}>\n                                        Home\n                                    </Button>\n                                </Link>\n                            )}\n                        </div>\n                    </Col>\n\n                    <Col xs={12} md={4}>\n                        <p style={styles.title}>Quick Math</p>\n                    </Col>\n\n                    <Col xs={12} md={4} style = {styles.button}>\n                        {this.state.auth ? (\n                            <Link to='/login'>\n                                <Button bsStyle=\"primary\" onClick={this.sendUser.bind(this)}>\n                                    Logout\n                                </Button>\n                            </Link>\n                        ) : (\n                            <div className=\"form\">\n                                <Link to='/login'>\n                                    <Button bsStyle=\"primary\">\n                                        Login\n                                    </Button>\n                                </Link>\n                                <Link to='/signup'>\n                                    <Button bsStyle=\"primary\" style={{marginLeft: 10,}}>\n                                        Sign Up\n                                    </Button>\n                                </Link>\n                            </div>\n                        )}\n\n                    </Col>\n                </Grid>\n\n                <Switch>\n                    <Route exact path='/' component={() => <Home user={this.state.username}/>} />\n                    <Route path='/login' component={() => <Login handler={this.handler}/>} />\n                    <Route path='/signup' component={SignUp} />\n                    <Route path='/quiz' component={QuizPage} />\n                    <Route path='/practice' component={() => <Practice user={this.state.username}/>} />\n                    <Route path='/results' component={Results} />\n                    <Route path='/search' component={() => <Search user={this.state.username}/>} />\n                    <Route path='/quizresults' component={QuizResults} />\n                    <Route path='/profile' component={() => <Profile user={this.state.username}/>} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nlet styles = {\n    div: {\n        paddingTop: 10,\n        background: '#24292e',\n        color: 'white',\n        fontSize: 60,\n        fontFamily: 'sans-serif',\n    },\n\n    title: {\n        fontFamily: 'Roboto Mono',\n    },\n\n    name: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 20,\n    },\n\n    button: {\n        textAlign: 'right',\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\" style = {{background: '#e5e8e8'}}>\n                <Header/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}